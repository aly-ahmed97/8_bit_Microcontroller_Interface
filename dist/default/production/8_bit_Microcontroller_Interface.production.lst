

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 25 17:41:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4620 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   001DF8                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _lat_registers
    75   001DF8  89                 	db	137
    76   001DF9  0F                 	db	15
    77   001DFA  8A                 	db	138
    78   001DFB  0F                 	db	15
    79   001DFC  8B                 	db	139
    80   001DFD  0F                 	db	15
    81   001DFE  8C                 	db	140
    82   001DFF  0F                 	db	15
    83   001E00  8D                 	db	141
    84   001E01  0F                 	db	15
    85                           
    86                           ;initializer for _port_registers
    87   001E02  80                 	db	128
    88   001E03  0F                 	db	15
    89   001E04  81                 	db	129
    90   001E05  0F                 	db	15
    91   001E06  82                 	db	130
    92   001E07  0F                 	db	15
    93   001E08  83                 	db	131
    94   001E09  0F                 	db	15
    95   001E0A  84                 	db	132
    96   001E0B  0F                 	db	15
    97                           
    98                           ;initializer for _tris_registers
    99   001E0C  92                 	db	146
   100   001E0D  0F                 	db	15
   101   001E0E  93                 	db	147
   102   001E0F  0F                 	db	15
   103   001E10  94                 	db	148
   104   001E11  0F                 	db	15
   105   001E12  95                 	db	149
   106   001E13  0F                 	db	15
   107   001E14  96                 	db	150
   108   001E15  0F                 	db	15
   109                           
   110                           ;initializer for _lcd2
   111   001E16  32                 	db	50
   112   001E17  3A                 	db	58
   113   001E18  03                 	db	3
   114   001E19  0B                 	db	11
   115   001E1A  13                 	db	19
   116   001E1B  1B                 	db	27
   117   001E1C  23                 	db	35
   118   001E1D  2B                 	db	43
   119   001E1E  33                 	db	51
   120   001E1F  3B                 	db	59
   121                           
   122                           ;initializer for _lcd1
   123   001E20  02                 	db	2
   124   001E21  0A                 	db	10
   125   001E22  12                 	db	18
   126   001E23  1A                 	db	26
   127   001E24  22                 	db	34
   128   001E25  2A                 	db	42
   129                           
   130                           	psect	smallconst
   131   001000                     __psmallconst:
   132                           	callstack 0
   133   001000  00                 	db	0
   134   001001  37                 	db	55
   135   001002  38                 	db	56
   136   001003  39                 	db	57
   137   001004  2F                 	db	47
   138   001005  34                 	db	52
   139   001006  35                 	db	53
   140   001007  36                 	db	54
   141   001008  2A                 	db	42
   142   001009  31                 	db	49
   143   00100A  32                 	db	50
   144   00100B  33                 	db	51
   145   00100C  2D                 	db	45
   146   00100D  23                 	db	35
   147   00100E  30                 	db	48
   148   00100F  3D                 	db	61
   149   001010  2B                 	db	43
   150   001011                     __end_of_button_Values:
   151                           	callstack 0
   152   000000                     _ZERO	set	32450
   153   000000                     _LATA	set	3977
   154   000000                     _PORTE	set	3972
   155   000000                     _PORTD	set	3971
   156   000000                     _PORTC	set	3970
   157   000000                     _PORTB	set	3969
   158   000000                     _PORTA	set	3968
   159   000000                     _TRISA	set	3986
   160   000000                     _TRISE	set	3990
   161   000000                     _TRISD	set	3989
   162   000000                     _TRISC	set	3988
   163   000000                     _TRISB	set	3987
   164   000000                     _LATE	set	3981
   165   000000                     _LATD	set	3980
   166   000000                     _LATC	set	3979
   167   000000                     _LATB	set	3978
   168   001011                     STR_1:
   169   001011  41                 	db	65	;'A'
   170   001012  48                 	db	72	;'H'
   171   001013  4D                 	db	77	;'M'
   172   001014  45                 	db	69	;'E'
   173   001015  44                 	db	68	;'D'
   174   001016  00                 	db	0
   175   001017  00                 	db	0	; dummy byte at the end
   176   000000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180   001DC2                     __pcinit:
   181                           	callstack 0
   182   001DC2                     start_initialization:
   183                           	callstack 0
   184   001DC2                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Initialize objects allocated to COMRAM (46 bytes)
   188                           ; load TBLPTR registers with __pidataCOMRAM
   189   001DC2  0EF8               	movlw	low __pidataCOMRAM
   190   001DC4  6EF6               	movwf	tblptrl,c
   191   001DC6  0E1D               	movlw	high __pidataCOMRAM
   192   001DC8  6EF7               	movwf	tblptrh,c
   193   001DCA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   194   001DCC  6EF8               	movwf	tblptru,c
   195   001DCE  EE00  F001         	lfsr	0,__pdataCOMRAM
   196   001DD2  EE10 F02E          	lfsr	1,46
   197   001DD6                     copy_data0:
   198   001DD6  0009               	tblrd		*+
   199   001DD8  CFF5 FFEE          	movff	tablat,postinc0
   200   001DDC  50E5               	movf	postdec1,w,c
   201   001DDE  50E1               	movf	fsr1l,w,c
   202   001DE0  E1FA               	bnz	copy_data0
   203                           
   204                           ; Clear objects allocated to COMRAM (9 bytes)
   205   001DE2  EE00  F050         	lfsr	0,__pbssCOMRAM
   206   001DE6  0E09               	movlw	9
   207   001DE8                     clear_0:
   208   001DE8  6AEE               	clrf	postinc0,c
   209   001DEA  06E8               	decf	wreg,f,c
   210   001DEC  E1FD               	bnz	clear_0
   211   001DEE                     end_of_initialization:
   212                           	callstack 0
   213   001DEE                     __end_of__initialization:
   214                           	callstack 0
   215   001DEE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216   001DF0  6EF8               	movwf	tblptru,c
   217   001DF2  0100               	movlb	0
   218   001DF4  EFDA  F00B         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221   000050                     __pbssCOMRAM:
   222                           	callstack 0
   223   000050                     Relay_TurnOff@F2883:
   224                           	callstack 0
   225   000050                     	ds	1
   226   000051                     Relay_TurnOn@F2878:
   227                           	callstack 0
   228   000051                     	ds	1
   229   000052                     Relay_init@F2873:
   230                           	callstack 0
   231   000052                     	ds	1
   232   000053                     led_toggle_state@F2894:
   233                           	callstack 0
   234   000053                     	ds	1
   235   000054                     led_turn_off@F2889:
   236                           	callstack 0
   237   000054                     	ds	1
   238   000055                     led_turn_on@F2884:
   239                           	callstack 0
   240   000055                     	ds	1
   241   000056                     led_init@F2879:
   242                           	callstack 0
   243   000056                     	ds	1
   244   000057                     _pin2:
   245                           	callstack 0
   246   000057                     	ds	1
   247   000058                     _pin1:
   248                           	callstack 0
   249   000058                     	ds	1
   250                           
   251                           	psect	dataCOMRAM
   252   000001                     __pdataCOMRAM:
   253                           	callstack 0
   254   000001                     _lat_registers:
   255                           	callstack 0
   256   000001                     	ds	10
   257   00000B                     _port_registers:
   258                           	callstack 0
   259   00000B                     	ds	10
   260   000015                     _tris_registers:
   261                           	callstack 0
   262   000015                     	ds	10
   263   00001F                     _lcd2:
   264                           	callstack 0
   265   00001F                     	ds	10
   266   000029                     _lcd1:
   267                           	callstack 0
   268   000029                     	ds	6
   269                           
   270                           	psect	cstackCOMRAM
   271   00002F                     __pcstackCOMRAM:
   272                           	callstack 0
   273   00002F                     gpio_pin_direction_init@_pin_config:
   274                           	callstack 0
   275   00002F                     gpio_pin_write_logic@_pin_config:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x0
   279   00002F                     	ds	2
   280   000031                     ??_gpio_pin_direction_init:
   281   000031                     gpio_pin_write_logic@logic:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x2
   285   000031                     	ds	1
   286   000032                     ??_gpio_pin_write_logic:
   287                           
   288                           ; 1 bytes @ 0x3
   289   000032                     	ds	5
   290   000037                     gpio_pin_direction_init@ret:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x8
   294   000037                     	ds	1
   295   000038                     gpio_pin_write_logic@ret:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x9
   299   000038                     	ds	1
   300   000039                     lcd_send_command_4bit@lcd:
   301                           	callstack 0
   302   000039                     lcd_send_data_4bit@lcd:
   303                           	callstack 0
   304   000039                     lcd_send_command_8bit@lcd:
   305                           	callstack 0
   306   000039                     lcd_send_data_8bit@lcd:
   307                           	callstack 0
   308   000039                     gpio_pin_init@_pin_config:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0xA
   312   000039                     	ds	2
   313   00003B                     ??_gpio_pin_init:
   314   00003B                     lcd_send_command_4bit@command:
   315                           	callstack 0
   316   00003B                     lcd_send_data_4bit@data:
   317                           	callstack 0
   318   00003B                     lcd_send_command_8bit@command:
   319                           	callstack 0
   320   00003B                     lcd_send_data_8bit@data:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0xC
   324   00003B                     	ds	1
   325   00003C                     ??_lcd_send_command_4bit:
   326   00003C                     ??_lcd_send_command_8bit:
   327   00003C                     ??_lcd_send_data_4bit:
   328   00003C                     ??_lcd_send_data_8bit:
   329   00003C                     gpio_pin_init@ret:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xD
   333   00003C                     	ds	4
   334   000040                     lcd_send_command_4bit@ret:
   335                           	callstack 0
   336   000040                     lcd_send_data_4bit@ret:
   337                           	callstack 0
   338   000040                     lcd_send_command_8bit@ret:
   339                           	callstack 0
   340   000040                     lcd_send_data_8bit@ret:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x11
   344   000040                     	ds	1
   345   000041                     lcd_send_command_4bit@index:
   346                           	callstack 0
   347   000041                     lcd_send_data_4bit@index:
   348                           	callstack 0
   349   000041                     lcd_send_command_8bit@index:
   350                           	callstack 0
   351   000041                     lcd_send_data_8bit@index:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x12
   355   000041                     	ds	1
   356   000042                     lcd_init_4bit@lcd:
   357                           	callstack 0
   358   000042                     lcd_send_string_4bit@lcd:
   359                           	callstack 0
   360   000042                     lcd_init_8bit@lcd:
   361                           	callstack 0
   362   000042                     lcd_send_string_8bit@lcd:
   363                           	callstack 0
   364   000042                     lcd_8bit_set_cursor@lcd:
   365                           	callstack 0
   366   000042                     lcd_4bit_set_cursor@lcd:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x13
   370   000042                     	ds	2
   371   000044                     ??_lcd_init_4bit:
   372   000044                     ??_lcd_init_8bit:
   373   000044                     lcd_8bit_set_cursor@row:
   374                           	callstack 0
   375   000044                     lcd_4bit_set_cursor@row:
   376                           	callstack 0
   377   000044                     lcd_send_string_4bit@str:
   378                           	callstack 0
   379   000044                     lcd_send_string_8bit@str:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x15
   383   000044                     	ds	1
   384   000045                     lcd_8bit_set_cursor@column:
   385                           	callstack 0
   386   000045                     lcd_4bit_set_cursor@column:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x16
   390   000045                     	ds	1
   391   000046                     ??_lcd_4bit_set_cursor:
   392   000046                     ??_lcd_8bit_set_cursor:
   393   000046                     lcd_init_4bit@index:
   394                           	callstack 0
   395   000046                     lcd_send_string_4bit@ret:
   396                           	callstack 0
   397   000046                     lcd_init_8bit@index:
   398                           	callstack 0
   399   000046                     lcd_send_string_8bit@ret:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x17
   403   000046                     	ds	1
   404   000047                     lcd_init_4bit@ret:
   405                           	callstack 0
   406   000047                     lcd_init_8bit@ret:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x18
   410   000047                     	ds	1
   411   000048                     lcd_8bit_set_cursor@ret:
   412                           	callstack 0
   413   000048                     lcd_4bit_set_cursor@ret:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x19
   417   000048                     	ds	1
   418   000049                     lcd_send_data_pos_4bit@lcd:
   419                           	callstack 0
   420   000049                     lcd_send_string_pos_4bit@lcd:
   421                           	callstack 0
   422   000049                     lcd_send_data_pos_8bit@lcd:
   423                           	callstack 0
   424   000049                     lcd_send_string_pos_8bit@lcd:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x1A
   428   000049                     	ds	2
   429   00004B                     lcd_send_data_pos_4bit@data:
   430                           	callstack 0
   431   00004B                     lcd_send_data_pos_8bit@data:
   432                           	callstack 0
   433   00004B                     lcd_send_string_pos_4bit@str:
   434                           	callstack 0
   435   00004B                     lcd_send_string_pos_8bit@str:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x1C
   439   00004B                     	ds	1
   440   00004C                     lcd_send_data_pos_4bit@column:
   441                           	callstack 0
   442   00004C                     lcd_send_data_pos_8bit@column:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x1D
   446   00004C                     	ds	1
   447   00004D                     lcd_send_data_pos_4bit@row:
   448                           	callstack 0
   449   00004D                     lcd_send_string_pos_4bit@column:
   450                           	callstack 0
   451   00004D                     lcd_send_data_pos_8bit@row:
   452                           	callstack 0
   453   00004D                     lcd_send_string_pos_8bit@column:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x1E
   457   00004D                     	ds	1
   458   00004E                     lcd_send_data_pos_4bit@ret:
   459                           	callstack 0
   460   00004E                     lcd_send_string_pos_4bit@row:
   461                           	callstack 0
   462   00004E                     lcd_send_data_pos_8bit@ret:
   463                           	callstack 0
   464   00004E                     lcd_send_string_pos_8bit@row:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x1F
   468   00004E                     	ds	1
   469   00004F                     lcd_send_string_pos_4bit@ret:
   470                           	callstack 0
   471   00004F                     lcd_send_string_pos_8bit@ret:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x20
   475   00004F                     	ds	1
   476   000050                     
   477                           ; 1 bytes @ 0x21
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 84 in file "Application.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  ret             1    0        unsigned char 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  2  458[None  ] int 
   490 ;; Registers used:
   491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels required when called: 4
   503 ;; This function calls:
   504 ;;		_lcd_init_4bit
   505 ;;		_lcd_init_8bit
   506 ;;		_lcd_send_data_4bit
   507 ;;		_lcd_send_data_8bit
   508 ;;		_lcd_send_data_pos_4bit
   509 ;;		_lcd_send_data_pos_8bit
   510 ;;		_lcd_send_string_pos_4bit
   511 ;;		_lcd_send_string_pos_8bit
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text0
   518   0017B4                     __ptext0:
   519                           	callstack 0
   520   0017B4                     _main:
   521                           	callstack 27
   522   0017B4  0E29               	movlw	low _lcd1
   523   0017B6  6E42               	movwf	lcd_init_4bit@lcd^0,c
   524   0017B8  0E00               	movlw	high _lcd1
   525   0017BA  6E43               	movwf	(lcd_init_4bit@lcd+1)^0,c
   526   0017BC  EC46  F00B         	call	_lcd_init_4bit	;wreg free
   527   0017C0  0E1F               	movlw	low _lcd2
   528   0017C2  6E42               	movwf	lcd_init_8bit@lcd^0,c
   529   0017C4  0E00               	movlw	high _lcd2
   530   0017C6  6E43               	movwf	(lcd_init_8bit@lcd+1)^0,c
   531   0017C8  ECB2  F00A         	call	_lcd_init_8bit	;wreg free
   532   0017CC  0E1F               	movlw	low _lcd2
   533   0017CE  6E39               	movwf	lcd_send_data_8bit@lcd^0,c
   534   0017D0  0E00               	movlw	high _lcd2
   535   0017D2  6E3A               	movwf	(lcd_send_data_8bit@lcd+1)^0,c
   536   0017D4  0E41               	movlw	65
   537   0017D6  6E3B               	movwf	lcd_send_data_8bit@data^0,c
   538   0017D8  EC46  F00C         	call	_lcd_send_data_8bit	;wreg free
   539   0017DC  0E1F               	movlw	low _lcd2
   540   0017DE  6E49               	movwf	lcd_send_data_pos_8bit@lcd^0,c
   541   0017E0  0E00               	movlw	high _lcd2
   542   0017E2  6E4A               	movwf	(lcd_send_data_pos_8bit@lcd+1)^0,c
   543   0017E4  0E4C               	movlw	76
   544   0017E6  6E4B               	movwf	lcd_send_data_pos_8bit@data^0,c
   545   0017E8  0E05               	movlw	5
   546   0017EA  6E4C               	movwf	lcd_send_data_pos_8bit@column^0,c
   547   0017EC  0E01               	movlw	1
   548   0017EE  6E4D               	movwf	lcd_send_data_pos_8bit@row^0,c
   549   0017F0  EC9B  F00E         	call	_lcd_send_data_pos_8bit	;wreg free
   550   0017F4  0E1F               	movlw	low _lcd2
   551   0017F6  6E49               	movwf	lcd_send_data_pos_8bit@lcd^0,c
   552   0017F8  0E00               	movlw	high _lcd2
   553   0017FA  6E4A               	movwf	(lcd_send_data_pos_8bit@lcd+1)^0,c
   554   0017FC  0E59               	movlw	89
   555   0017FE  6E4B               	movwf	lcd_send_data_pos_8bit@data^0,c
   556   001800  0E0A               	movlw	10
   557   001802  6E4C               	movwf	lcd_send_data_pos_8bit@column^0,c
   558   001804  0E02               	movlw	2
   559   001806  6E4D               	movwf	lcd_send_data_pos_8bit@row^0,c
   560   001808  EC9B  F00E         	call	_lcd_send_data_pos_8bit	;wreg free
   561   00180C  0E1F               	movlw	low _lcd2
   562   00180E  6E49               	movwf	lcd_send_string_pos_8bit@lcd^0,c
   563   001810  0E00               	movlw	high _lcd2
   564   001812  6E4A               	movwf	(lcd_send_string_pos_8bit@lcd+1)^0,c
   565   001814  0E11               	movlw	low STR_1
   566   001816  6E4B               	movwf	lcd_send_string_pos_8bit@str^0,c
   567   001818  0E10               	movlw	high STR_1
   568   00181A  6E4C               	movwf	(lcd_send_string_pos_8bit@str+1)^0,c
   569   00181C  0E00               	movlw	0
   570   00181E  6E4D               	movwf	lcd_send_string_pos_8bit@column^0,c
   571   001820  0E03               	movlw	3
   572   001822  6E4E               	movwf	lcd_send_string_pos_8bit@row^0,c
   573   001824  EC53  F00E         	call	_lcd_send_string_pos_8bit	;wreg free
   574   001828  0E29               	movlw	low _lcd1
   575   00182A  6E39               	movwf	lcd_send_data_4bit@lcd^0,c
   576   00182C  0E00               	movlw	high _lcd1
   577   00182E  6E3A               	movwf	(lcd_send_data_4bit@lcd+1)^0,c
   578   001830  0E41               	movlw	65
   579   001832  6E3B               	movwf	lcd_send_data_4bit@data^0,c
   580   001834  EC66  F009         	call	_lcd_send_data_4bit	;wreg free
   581   001838  0E29               	movlw	low _lcd1
   582   00183A  6E49               	movwf	lcd_send_data_pos_4bit@lcd^0,c
   583   00183C  0E00               	movlw	high _lcd1
   584   00183E  6E4A               	movwf	(lcd_send_data_pos_4bit@lcd+1)^0,c
   585   001840  0E4C               	movlw	76
   586   001842  6E4B               	movwf	lcd_send_data_pos_4bit@data^0,c
   587   001844  0E05               	movlw	5
   588   001846  6E4C               	movwf	lcd_send_data_pos_4bit@column^0,c
   589   001848  0E01               	movlw	1
   590   00184A  6E4D               	movwf	lcd_send_data_pos_4bit@row^0,c
   591   00184C  ECBE  F00E         	call	_lcd_send_data_pos_4bit	;wreg free
   592   001850  0E29               	movlw	low _lcd1
   593   001852  6E49               	movwf	lcd_send_data_pos_4bit@lcd^0,c
   594   001854  0E00               	movlw	high _lcd1
   595   001856  6E4A               	movwf	(lcd_send_data_pos_4bit@lcd+1)^0,c
   596   001858  0E59               	movlw	89
   597   00185A  6E4B               	movwf	lcd_send_data_pos_4bit@data^0,c
   598   00185C  0E0A               	movlw	10
   599   00185E  6E4C               	movwf	lcd_send_data_pos_4bit@column^0,c
   600   001860  0E02               	movlw	2
   601   001862  6E4D               	movwf	lcd_send_data_pos_4bit@row^0,c
   602   001864  ECBE  F00E         	call	_lcd_send_data_pos_4bit	;wreg free
   603   001868  0E29               	movlw	low _lcd1
   604   00186A  6E49               	movwf	lcd_send_string_pos_4bit@lcd^0,c
   605   00186C  0E00               	movlw	high _lcd1
   606   00186E  6E4A               	movwf	(lcd_send_string_pos_4bit@lcd+1)^0,c
   607   001870  0E11               	movlw	low STR_1
   608   001872  6E4B               	movwf	lcd_send_string_pos_4bit@str^0,c
   609   001874  0E10               	movlw	high STR_1
   610   001876  6E4C               	movwf	(lcd_send_string_pos_4bit@str+1)^0,c
   611   001878  0E00               	movlw	0
   612   00187A  6E4D               	movwf	lcd_send_string_pos_4bit@column^0,c
   613   00187C  0E03               	movlw	3
   614   00187E  6E4E               	movwf	lcd_send_string_pos_4bit@row^0,c
   615   001880  EC77  F00E         	call	_lcd_send_string_pos_4bit	;wreg free
   616   001884                     l459:
   617   001884  EF42  F00C         	goto	l459
   618   001888  EF00  F000         	goto	start
   619   00188C                     __end_of_main:
   620                           	callstack 0
   621                           
   622 ;; *************** function _lcd_send_string_pos_8bit *****************
   623 ;; Defined at:
   624 ;;		line 236 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  lcd             2   26[COMRAM] PTR const struct .
   627 ;;		 -> lcd2(10), 
   628 ;;  str             2   28[COMRAM] PTR unsigned char 
   629 ;;		 -> STR_1(6), 
   630 ;;  column          1   30[COMRAM] unsigned char 
   631 ;;  row             1   31[COMRAM] unsigned char 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  ret             1   32[COMRAM] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      unsigned char 
   636 ;; Registers used:
   637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   643 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;Total ram usage:        7 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 3
   650 ;; This function calls:
   651 ;;		_lcd_8bit_set_cursor
   652 ;;		_lcd_send_string_8bit
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text1
   659   001CA6                     __ptext1:
   660                           	callstack 0
   661   001CA6                     _lcd_send_string_pos_8bit:
   662                           	callstack 27
   663   001CA6                     
   664                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 238:     if(((void*)0) == lcd)
   665   001CA6  5049               	movf	lcd_send_string_pos_8bit@lcd^0,w,c
   666   001CA8  104A               	iorwf	(lcd_send_string_pos_8bit@lcd+1)^0,w,c
   667   001CAA  A4D8               	btfss	status,2,c
   668   001CAC  EF5A  F00E         	goto	u1471
   669   001CB0  EF5C  F00E         	goto	u1470
   670   001CB4                     u1471:
   671   001CB4  EF60  F00E         	goto	l2474
   672   001CB8                     u1470:
   673   001CB8                     
   674                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 239:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 240:  
      +                                 ret = (Std_ReturnType)0x00 ;
   675   001CB8  0E00               	movlw	0
   676   001CBA  6E4F               	movwf	lcd_send_string_pos_8bit@ret^0,c
   677                           
   678                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 241:     }
   679   001CBC  EF75  F00E         	goto	l2478
   680   001CC0                     l2474:
   681   001CC0  C049  F042         	movff	lcd_send_string_pos_8bit@lcd,lcd_8bit_set_cursor@lcd
   682   001CC4  C04A  F043         	movff	lcd_send_string_pos_8bit@lcd+1,lcd_8bit_set_cursor@lcd+1
   683   001CC8  C04E  F044         	movff	lcd_send_string_pos_8bit@row,lcd_8bit_set_cursor@row
   684   001CCC  C04D  F045         	movff	lcd_send_string_pos_8bit@column,lcd_8bit_set_cursor@column
   685   001CD0  EC04  F00D         	call	_lcd_8bit_set_cursor	;wreg free
   686   001CD4                     
   687                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 245:         ret = lcd_send_string_8bit(lcd,str);
   688   001CD4  C049  F042         	movff	lcd_send_string_pos_8bit@lcd,lcd_send_string_8bit@lcd
   689   001CD8  C04A  F043         	movff	lcd_send_string_pos_8bit@lcd+1,lcd_send_string_8bit@lcd+1
   690   001CDC  C04B  F044         	movff	lcd_send_string_pos_8bit@str,lcd_send_string_8bit@str
   691   001CE0  C04C  F045         	movff	lcd_send_string_pos_8bit@str+1,lcd_send_string_8bit@str+1
   692   001CE4  ECF5  F00D         	call	_lcd_send_string_8bit	;wreg free
   693   001CE8  6E4F               	movwf	lcd_send_string_pos_8bit@ret^0,c
   694   001CEA                     l2478:
   695                           
   696                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 247:     return ret ;
   697   001CEA  504F               	movf	lcd_send_string_pos_8bit@ret^0,w,c
   698   001CEC  0012               	return		;funcret
   699   001CEE                     __end_of_lcd_send_string_pos_8bit:
   700                           	callstack 0
   701                           
   702 ;; *************** function _lcd_send_string_8bit *****************
   703 ;; Defined at:
   704 ;;		line 220 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  lcd             2   19[COMRAM] PTR const struct .
   707 ;;		 -> lcd2(10), 
   708 ;;  str             2   21[COMRAM] PTR unsigned char 
   709 ;;		 -> STR_1(6), 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  ret             1   23[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      unsigned char 
   714 ;; Registers used:
   715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;Total ram usage:        5 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 2
   728 ;; This function calls:
   729 ;;		_lcd_send_data_8bit
   730 ;; This function is called by:
   731 ;;		_lcd_send_string_pos_8bit
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text2
   736   001BEA                     __ptext2:
   737                           	callstack 0
   738   001BEA                     _lcd_send_string_8bit:
   739                           	callstack 27
   740   001BEA                     
   741                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 221:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   742   001BEA  0E01               	movlw	1
   743   001BEC  6E46               	movwf	lcd_send_string_8bit@ret^0,c
   744   001BEE                     
   745                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 222:     if(((void*)0) == lcd)
   746   001BEE  5042               	movf	lcd_send_string_8bit@lcd^0,w,c
   747   001BF0  1043               	iorwf	(lcd_send_string_8bit@lcd+1)^0,w,c
   748   001BF2  A4D8               	btfss	status,2,c
   749   001BF4  EFFE  F00D         	goto	u1381
   750   001BF8  EF00  F00E         	goto	u1380
   751   001BFC                     u1381:
   752   001BFC  EF14  F00E         	goto	l2336
   753   001C00                     u1380:
   754   001C00                     
   755                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 223:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 224:  
      +                                 ret = (Std_ReturnType)0x00 ;
   756   001C00  0E00               	movlw	0
   757   001C02  6E46               	movwf	lcd_send_string_8bit@ret^0,c
   758                           
   759                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 225:     }
   760   001C04  EF22  F00E         	goto	l2338
   761   001C08                     l2332:
   762                           
   763                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 229:         {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 23
      +                          0:             ret = lcd_send_data_8bit(lcd,*str++);
   764   001C08  C042  F039         	movff	lcd_send_string_8bit@lcd,lcd_send_data_8bit@lcd
   765   001C0C  C043  F03A         	movff	lcd_send_string_8bit@lcd+1,lcd_send_data_8bit@lcd+1
   766   001C10  C044  FFF6         	movff	lcd_send_string_8bit@str,tblptrl
   767   001C14  C045  FFF7         	movff	lcd_send_string_8bit@str+1,tblptrh
   768   001C18                     	if	0	;tblptru may be non-zero
   769   001C18                     	endif
   770   001C18                     	if	0	;tblptru may be non-zero
   771   001C18                     	endif
   772   001C18  0008               	tblrd		*
   773   001C1A  CFF5 F03B          	movff	tablat,lcd_send_data_8bit@data
   774   001C1E  EC46  F00C         	call	_lcd_send_data_8bit	;wreg free
   775   001C22  6E46               	movwf	lcd_send_string_8bit@ret^0,c
   776   001C24  4A44               	infsnz	lcd_send_string_8bit@str^0,f,c
   777   001C26  2A45               	incf	(lcd_send_string_8bit@str+1)^0,f,c
   778   001C28                     l2336:
   779                           
   780                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 228:         while(((void*)0) != *str )
   781   001C28  C044  FFF6         	movff	lcd_send_string_8bit@str,tblptrl
   782   001C2C  C045  FFF7         	movff	lcd_send_string_8bit@str+1,tblptrh
   783   001C30                     	if	0	;tblptru may be non-zero
   784   001C30                     	endif
   785   001C30                     	if	0	;tblptru may be non-zero
   786   001C30                     	endif
   787   001C30  0008               	tblrd		*
   788   001C32  50F5               	movf	tablat,w,c
   789   001C34  0900               	iorlw	0
   790   001C36  A4D8               	btfss	status,2,c
   791   001C38  EF20  F00E         	goto	u1391
   792   001C3C  EF22  F00E         	goto	u1390
   793   001C40                     u1391:
   794   001C40  EF04  F00E         	goto	l2332
   795   001C44                     u1390:
   796   001C44                     l2338:
   797                           
   798                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 233:     return ret ;
   799   001C44  5046               	movf	lcd_send_string_8bit@ret^0,w,c
   800   001C46  0012               	return		;funcret
   801   001C48                     __end_of_lcd_send_string_8bit:
   802                           	callstack 0
   803                           
   804 ;; *************** function _lcd_send_string_pos_4bit *****************
   805 ;; Defined at:
   806 ;;		line 118 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  lcd             2   26[COMRAM] PTR const struct .
   809 ;;		 -> lcd1(6), 
   810 ;;  str             2   28[COMRAM] PTR unsigned char 
   811 ;;		 -> STR_2(6), 
   812 ;;  column          1   30[COMRAM] unsigned char 
   813 ;;  row             1   31[COMRAM] unsigned char 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  ret             1   32[COMRAM] unsigned char 
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      unsigned char 
   818 ;; Registers used:
   819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   825 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;Total ram usage:        7 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 3
   832 ;; This function calls:
   833 ;;		_lcd_4bit_set_cursor
   834 ;;		_lcd_send_string_4bit
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text3
   841   001CEE                     __ptext3:
   842                           	callstack 0
   843   001CEE                     _lcd_send_string_pos_4bit:
   844                           	callstack 27
   845   001CEE                     
   846                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 120:     if(((void*)0) == lcd)
   847   001CEE  5049               	movf	lcd_send_string_pos_4bit@lcd^0,w,c
   848   001CF0  104A               	iorwf	(lcd_send_string_pos_4bit@lcd+1)^0,w,c
   849   001CF2  A4D8               	btfss	status,2,c
   850   001CF4  EF7E  F00E         	goto	u1431
   851   001CF8  EF80  F00E         	goto	u1430
   852   001CFC                     u1431:
   853   001CFC  EF84  F00E         	goto	l2404
   854   001D00                     u1430:
   855   001D00                     
   856                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 121:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 122:  
      +                                 ret = (Std_ReturnType)0x00 ;
   857   001D00  0E00               	movlw	0
   858   001D02  6E4F               	movwf	lcd_send_string_pos_4bit@ret^0,c
   859                           
   860                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 123:     }
   861   001D04  EF99  F00E         	goto	l2408
   862   001D08                     l2404:
   863   001D08  C049  F042         	movff	lcd_send_string_pos_4bit@lcd,lcd_4bit_set_cursor@lcd
   864   001D0C  C04A  F043         	movff	lcd_send_string_pos_4bit@lcd+1,lcd_4bit_set_cursor@lcd+1
   865   001D10  C04E  F044         	movff	lcd_send_string_pos_4bit@row,lcd_4bit_set_cursor@row
   866   001D14  C04D  F045         	movff	lcd_send_string_pos_4bit@column,lcd_4bit_set_cursor@column
   867   001D18  EC59  F00D         	call	_lcd_4bit_set_cursor	;wreg free
   868   001D1C                     
   869                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 127:         ret = lcd_send_string_4bit(lcd,str);
   870   001D1C  C049  F042         	movff	lcd_send_string_pos_4bit@lcd,lcd_send_string_4bit@lcd
   871   001D20  C04A  F043         	movff	lcd_send_string_pos_4bit@lcd+1,lcd_send_string_4bit@lcd+1
   872   001D24  C04B  F044         	movff	lcd_send_string_pos_4bit@str,lcd_send_string_4bit@str
   873   001D28  C04C  F045         	movff	lcd_send_string_pos_4bit@str+1,lcd_send_string_4bit@str+1
   874   001D2C  EC24  F00E         	call	_lcd_send_string_4bit	;wreg free
   875   001D30  6E4F               	movwf	lcd_send_string_pos_4bit@ret^0,c
   876   001D32                     l2408:
   877                           
   878                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 129:     return ret ;
   879   001D32  504F               	movf	lcd_send_string_pos_4bit@ret^0,w,c
   880   001D34  0012               	return		;funcret
   881   001D36                     __end_of_lcd_send_string_pos_4bit:
   882                           	callstack 0
   883                           
   884 ;; *************** function _lcd_send_string_4bit *****************
   885 ;; Defined at:
   886 ;;		line 102 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  lcd             2   19[COMRAM] PTR const struct .
   889 ;;		 -> lcd1(6), 
   890 ;;  str             2   21[COMRAM] PTR unsigned char 
   891 ;;		 -> STR_2(6), 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  ret             1   23[COMRAM] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      unsigned char 
   896 ;; Registers used:
   897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;Total ram usage:        5 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 2
   910 ;; This function calls:
   911 ;;		_lcd_send_data_4bit
   912 ;; This function is called by:
   913 ;;		_lcd_send_string_pos_4bit
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text4
   918   001C48                     __ptext4:
   919                           	callstack 0
   920   001C48                     _lcd_send_string_4bit:
   921                           	callstack 27
   922   001C48                     
   923                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 103:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   924   001C48  0E01               	movlw	1
   925   001C4A  6E46               	movwf	lcd_send_string_4bit@ret^0,c
   926   001C4C                     
   927                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 104:     if(((void*)0) == lcd)
   928   001C4C  5042               	movf	lcd_send_string_4bit@lcd^0,w,c
   929   001C4E  1043               	iorwf	(lcd_send_string_4bit@lcd+1)^0,w,c
   930   001C50  A4D8               	btfss	status,2,c
   931   001C52  EF2D  F00E         	goto	u1361
   932   001C56  EF2F  F00E         	goto	u1360
   933   001C5A                     u1361:
   934   001C5A  EF43  F00E         	goto	l2298
   935   001C5E                     u1360:
   936   001C5E                     
   937                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 105:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 106:  
      +                                 ret = (Std_ReturnType)0x00 ;
   938   001C5E  0E00               	movlw	0
   939   001C60  6E46               	movwf	lcd_send_string_4bit@ret^0,c
   940                           
   941                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 107:     }
   942   001C62  EF51  F00E         	goto	l2300
   943   001C66                     l2294:
   944                           
   945                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 111:         {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 11
      +                          2:             ret = lcd_send_data_4bit(lcd,*str++);
   946   001C66  C042  F039         	movff	lcd_send_string_4bit@lcd,lcd_send_data_4bit@lcd
   947   001C6A  C043  F03A         	movff	lcd_send_string_4bit@lcd+1,lcd_send_data_4bit@lcd+1
   948   001C6E  C044  FFF6         	movff	lcd_send_string_4bit@str,tblptrl
   949   001C72  C045  FFF7         	movff	lcd_send_string_4bit@str+1,tblptrh
   950   001C76                     	if	0	;tblptru may be non-zero
   951   001C76                     	endif
   952   001C76                     	if	0	;tblptru may be non-zero
   953   001C76                     	endif
   954   001C76  0008               	tblrd		*
   955   001C78  CFF5 F03B          	movff	tablat,lcd_send_data_4bit@data
   956   001C7C  EC66  F009         	call	_lcd_send_data_4bit	;wreg free
   957   001C80  6E46               	movwf	lcd_send_string_4bit@ret^0,c
   958   001C82  4A44               	infsnz	lcd_send_string_4bit@str^0,f,c
   959   001C84  2A45               	incf	(lcd_send_string_4bit@str+1)^0,f,c
   960   001C86                     l2298:
   961                           
   962                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 110:         while(((void*)0) != *str )
   963   001C86  C044  FFF6         	movff	lcd_send_string_4bit@str,tblptrl
   964   001C8A  C045  FFF7         	movff	lcd_send_string_4bit@str+1,tblptrh
   965   001C8E                     	if	0	;tblptru may be non-zero
   966   001C8E                     	endif
   967   001C8E                     	if	0	;tblptru may be non-zero
   968   001C8E                     	endif
   969   001C8E  0008               	tblrd		*
   970   001C90  50F5               	movf	tablat,w,c
   971   001C92  0900               	iorlw	0
   972   001C94  A4D8               	btfss	status,2,c
   973   001C96  EF4F  F00E         	goto	u1371
   974   001C9A  EF51  F00E         	goto	u1370
   975   001C9E                     u1371:
   976   001C9E  EF33  F00E         	goto	l2294
   977   001CA2                     u1370:
   978   001CA2                     l2300:
   979                           
   980                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 115:     return ret ;
   981   001CA2  5046               	movf	lcd_send_string_4bit@ret^0,w,c
   982   001CA4  0012               	return		;funcret
   983   001CA6                     __end_of_lcd_send_string_4bit:
   984                           	callstack 0
   985                           
   986 ;; *************** function _lcd_send_data_pos_8bit *****************
   987 ;; Defined at:
   988 ;;		line 206 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;  lcd             2   26[COMRAM] PTR const struct .
   991 ;;		 -> lcd2(10), 
   992 ;;  data            1   28[COMRAM] unsigned char 
   993 ;;  column          1   29[COMRAM] unsigned char 
   994 ;;  row             1   30[COMRAM] unsigned char 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  ret             1   31[COMRAM] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      unsigned char 
   999 ;; Registers used:
  1000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1006 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;Total ram usage:        6 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 3
  1013 ;; This function calls:
  1014 ;;		_lcd_8bit_set_cursor
  1015 ;;		_lcd_send_data_8bit
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text5
  1022   001D36                     __ptext5:
  1023                           	callstack 0
  1024   001D36                     _lcd_send_data_pos_8bit:
  1025                           	callstack 27
  1026   001D36                     
  1027                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 208:     if(((void*)0) == lcd)
  1028   001D36  5049               	movf	lcd_send_data_pos_8bit@lcd^0,w,c
  1029   001D38  104A               	iorwf	(lcd_send_data_pos_8bit@lcd+1)^0,w,c
  1030   001D3A  A4D8               	btfss	status,2,c
  1031   001D3C  EFA2  F00E         	goto	u1461
  1032   001D40  EFA4  F00E         	goto	u1460
  1033   001D44                     u1461:
  1034   001D44  EFA8  F00E         	goto	l2462
  1035   001D48                     u1460:
  1036   001D48                     
  1037                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 209:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 210:  
      +                                 ret = (Std_ReturnType)0x00 ;
  1038   001D48  0E00               	movlw	0
  1039   001D4A  6E4E               	movwf	lcd_send_data_pos_8bit@ret^0,c
  1040                           
  1041                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 211:     }
  1042   001D4C  EFBC  F00E         	goto	l2464
  1043   001D50                     l2462:
  1044                           
  1045                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 213:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 214:  
      +                                 ret = lcd_8bit_set_cursor(lcd,row,column);
  1046   001D50  C049  F042         	movff	lcd_send_data_pos_8bit@lcd,lcd_8bit_set_cursor@lcd
  1047   001D54  C04A  F043         	movff	lcd_send_data_pos_8bit@lcd+1,lcd_8bit_set_cursor@lcd+1
  1048   001D58  C04D  F044         	movff	lcd_send_data_pos_8bit@row,lcd_8bit_set_cursor@row
  1049   001D5C  C04C  F045         	movff	lcd_send_data_pos_8bit@column,lcd_8bit_set_cursor@column
  1050   001D60  EC04  F00D         	call	_lcd_8bit_set_cursor	;wreg free
  1051   001D64  6E4E               	movwf	lcd_send_data_pos_8bit@ret^0,c
  1052                           
  1053                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 215:         ret = lcd_send_data_8bit(lcd,data);
  1054   001D66  C049  F039         	movff	lcd_send_data_pos_8bit@lcd,lcd_send_data_8bit@lcd
  1055   001D6A  C04A  F03A         	movff	lcd_send_data_pos_8bit@lcd+1,lcd_send_data_8bit@lcd+1
  1056   001D6E  C04B  F03B         	movff	lcd_send_data_pos_8bit@data,lcd_send_data_8bit@data
  1057   001D72  EC46  F00C         	call	_lcd_send_data_8bit	;wreg free
  1058   001D76  6E4E               	movwf	lcd_send_data_pos_8bit@ret^0,c
  1059   001D78                     l2464:
  1060                           
  1061                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 217:     return ret ;
  1062   001D78  504E               	movf	lcd_send_data_pos_8bit@ret^0,w,c
  1063   001D7A  0012               	return		;funcret
  1064   001D7C                     __end_of_lcd_send_data_pos_8bit:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _lcd_send_data_8bit *****************
  1068 ;; Defined at:
  1069 ;;		line 184 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  lcd             2   10[COMRAM] PTR const struct .
  1072 ;;		 -> lcd2(10), 
  1073 ;;  data            1   12[COMRAM] unsigned char 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  index           1   18[COMRAM] unsigned char 
  1076 ;;  ret             1   17[COMRAM] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      unsigned char 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1086 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1090 ;;Total ram usage:        9 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 1
  1093 ;; This function calls:
  1094 ;;		_gpio_pin_write_logic
  1095 ;; This function is called by:
  1096 ;;		_lcd_send_data_pos_8bit
  1097 ;;		_lcd_send_string_8bit
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text6
  1103   00188C                     __ptext6:
  1104                           	callstack 0
  1105   00188C                     _lcd_send_data_8bit:
  1106                           	callstack 27
  1107   00188C                     
  1108                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 186:     uint8_t index = 0 ;
  1109   00188C  0E00               	movlw	0
  1110   00188E  6E41               	movwf	lcd_send_data_8bit@index^0,c
  1111   001890                     
  1112                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 187:     if(((void*)0) == lcd)
  1113   001890  5039               	movf	lcd_send_data_8bit@lcd^0,w,c
  1114   001892  103A               	iorwf	(lcd_send_data_8bit@lcd+1)^0,w,c
  1115   001894  A4D8               	btfss	status,2,c
  1116   001896  EF4F  F00C         	goto	u1181
  1117   00189A  EF51  F00C         	goto	u1180
  1118   00189E                     u1181:
  1119   00189E  EF55  F00C         	goto	l2154
  1120   0018A2                     u1180:
  1121   0018A2                     
  1122                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 188:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 189:  
      +                                 ret = (Std_ReturnType)0x00 ;
  1123   0018A2  0E00               	movlw	0
  1124   0018A4  6E40               	movwf	lcd_send_data_8bit@ret^0,c
  1125                           
  1126                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 190:     }
  1127   0018A6  EFA3  F00C         	goto	l2172
  1128   0018AA                     l2154:
  1129   0018AA  C039  F02F         	movff	lcd_send_data_8bit@lcd,gpio_pin_write_logic@_pin_config
  1130   0018AE  C03A  F030         	movff	lcd_send_data_8bit@lcd+1,gpio_pin_write_logic@_pin_config+1
  1131   0018B2  0E01               	movlw	1
  1132   0018B4  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1133   0018B6  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1134   0018BA                     
  1135                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 194:         for(index = ZERO ; index < 8 ; index++)
  1136   0018BA  0E00               	movlw	0
  1137   0018BC  B4D8               	btfsc	status,2,c	;volatile
  1138   0018BE  0E01               	movlw	1
  1139   0018C0  6E41               	movwf	lcd_send_data_8bit@index^0,c
  1140   0018C2                     l2158:
  1141   0018C2  0E07               	movlw	7
  1142   0018C4  6441               	cpfsgt	lcd_send_data_8bit@index^0,c
  1143   0018C6  EF67  F00C         	goto	u1191
  1144   0018CA  EF69  F00C         	goto	u1190
  1145   0018CE                     u1191:
  1146   0018CE  EF6B  F00C         	goto	l2162
  1147   0018D2                     u1190:
  1148   0018D2  EF8B  F00C         	goto	l2168
  1149   0018D6                     l2162:
  1150   0018D6  5041               	movf	lcd_send_data_8bit@index^0,w,c
  1151   0018D8  2439               	addwf	lcd_send_data_8bit@lcd^0,w,c
  1152   0018DA  6E3C               	movwf	??_lcd_send_data_8bit^0,c
  1153   0018DC  0E00               	movlw	0
  1154   0018DE  203A               	addwfc	(lcd_send_data_8bit@lcd+1)^0,w,c
  1155   0018E0  6E3D               	movwf	(??_lcd_send_data_8bit+1)^0,c
  1156   0018E2  0E02               	movlw	2
  1157   0018E4  243C               	addwf	??_lcd_send_data_8bit^0,w,c
  1158   0018E6  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1159   0018E8  0E00               	movlw	0
  1160   0018EA  203D               	addwfc	(??_lcd_send_data_8bit+1)^0,w,c
  1161   0018EC  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1162   0018EE  C041  F03E         	movff	lcd_send_data_8bit@index,??_lcd_send_data_8bit+2
  1163   0018F2  C03B  F03F         	movff	lcd_send_data_8bit@data,??_lcd_send_data_8bit+3
  1164   0018F6  2A3E               	incf	(??_lcd_send_data_8bit+2)^0,f,c
  1165   0018F8  EF80  F00C         	goto	u1204
  1166   0018FC                     u1205:
  1167   0018FC  90D8               	bcf	status,0,c
  1168   0018FE  323F               	rrcf	(??_lcd_send_data_8bit+3)^0,f,c
  1169   001900                     u1204:
  1170   001900  2E3E               	decfsz	(??_lcd_send_data_8bit+2)^0,f,c
  1171   001902  EF7E  F00C         	goto	u1205
  1172   001906  503F               	movf	(??_lcd_send_data_8bit+3)^0,w,c
  1173   001908  0B01               	andlw	1
  1174   00190A  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1175   00190C  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1176   001910                     
  1177                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 197:         }
  1178   001910  2A41               	incf	lcd_send_data_8bit@index^0,f,c
  1179   001912  EF61  F00C         	goto	l2158
  1180   001916                     l2168:
  1181   001916  0E01               	movlw	1
  1182   001918  2439               	addwf	lcd_send_data_8bit@lcd^0,w,c
  1183   00191A  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1184   00191C  0E00               	movlw	0
  1185   00191E  203A               	addwfc	(lcd_send_data_8bit@lcd+1)^0,w,c
  1186   001920  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1187   001922  0E01               	movlw	1
  1188   001924  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1189   001926  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1190   00192A                     
  1191                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 199:         _delay((unsigned long)((5)*(4000000UL/4
      +                          000000.0)));
  1192   00192A  D000               	nop2		;2 cycle nop
  1193   00192C  D000               	nop2		;2 cycle nop
  1194   00192E  F000               	nop	
  1195                           
  1196                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 200:         ret = gpio_pin_write_logic(&(lcd->lcd_e
      +                          n),GPIO_LOW);
  1197   001930  0E01               	movlw	1
  1198   001932  2439               	addwf	lcd_send_data_8bit@lcd^0,w,c
  1199   001934  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1200   001936  0E00               	movlw	0
  1201   001938  203A               	addwfc	(lcd_send_data_8bit@lcd+1)^0,w,c
  1202   00193A  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1203   00193C  0E00               	movlw	0
  1204   00193E  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1205   001940  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1206   001944  6E40               	movwf	lcd_send_data_8bit@ret^0,c
  1207   001946                     l2172:
  1208                           
  1209                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 203:     return ret ;
  1210   001946  5040               	movf	lcd_send_data_8bit@ret^0,w,c
  1211   001948  0012               	return		;funcret
  1212   00194A                     __end_of_lcd_send_data_8bit:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _lcd_8bit_set_cursor *****************
  1216 ;; Defined at:
  1217 ;;		line 262 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  lcd             2   19[COMRAM] PTR const struct .
  1220 ;;		 -> lcd2(10), 
  1221 ;;  row             1   21[COMRAM] unsigned char 
  1222 ;;  column          1   22[COMRAM] unsigned char 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  ret             1   25[COMRAM] unsigned char 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      unsigned char 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;Total ram usage:        7 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 2
  1241 ;; This function calls:
  1242 ;;		_lcd_send_command_8bit
  1243 ;; This function is called by:
  1244 ;;		_lcd_send_data_pos_8bit
  1245 ;;		_lcd_send_string_pos_8bit
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text7
  1250   001A08                     __ptext7:
  1251                           	callstack 0
  1252   001A08                     _lcd_8bit_set_cursor:
  1253                           	callstack 27
  1254   001A08                     
  1255                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 265:     switch(row)
  1256   001A08  EF3A  F00D         	goto	l2316
  1257   001A0C                     l2306:
  1258   001A0C  C042  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_send_command_8bit@lcd
  1259   001A10  C043  F03A         	movff	lcd_8bit_set_cursor@lcd+1,lcd_send_command_8bit@lcd+1
  1260   001A14  5045               	movf	lcd_8bit_set_cursor@column^0,w,c
  1261   001A16  0F80               	addlw	128
  1262   001A18  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1263   001A1A  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1264   001A1E  6E48               	movwf	lcd_8bit_set_cursor@ret^0,c
  1265   001A20  EF57  F00D         	goto	l2318
  1266   001A24                     l2308:
  1267   001A24  C042  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_send_command_8bit@lcd
  1268   001A28  C043  F03A         	movff	lcd_8bit_set_cursor@lcd+1,lcd_send_command_8bit@lcd+1
  1269   001A2C  5045               	movf	lcd_8bit_set_cursor@column^0,w,c
  1270   001A2E  0FC0               	addlw	192
  1271   001A30  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1272   001A32  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1273   001A36  6E48               	movwf	lcd_8bit_set_cursor@ret^0,c
  1274   001A38  EF57  F00D         	goto	l2318
  1275   001A3C                     l2310:
  1276   001A3C  C042  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_send_command_8bit@lcd
  1277   001A40  C043  F03A         	movff	lcd_8bit_set_cursor@lcd+1,lcd_send_command_8bit@lcd+1
  1278   001A44  5045               	movf	lcd_8bit_set_cursor@column^0,w,c
  1279   001A46  0F94               	addlw	148
  1280   001A48  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1281   001A4A  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1282   001A4E  6E48               	movwf	lcd_8bit_set_cursor@ret^0,c
  1283   001A50  EF57  F00D         	goto	l2318
  1284   001A54                     l2312:
  1285   001A54  C042  F039         	movff	lcd_8bit_set_cursor@lcd,lcd_send_command_8bit@lcd
  1286   001A58  C043  F03A         	movff	lcd_8bit_set_cursor@lcd+1,lcd_send_command_8bit@lcd+1
  1287   001A5C  5045               	movf	lcd_8bit_set_cursor@column^0,w,c
  1288   001A5E  0FD4               	addlw	212
  1289   001A60  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1290   001A62  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1291   001A66  6E48               	movwf	lcd_8bit_set_cursor@ret^0,c
  1292   001A68  EF57  F00D         	goto	l2318
  1293   001A6C                     l2314:
  1294   001A6C  0E00               	movlw	0
  1295   001A6E  6E48               	movwf	lcd_8bit_set_cursor@ret^0,c
  1296                           
  1297                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 272:     }
  1298   001A70  EF57  F00D         	goto	l2318
  1299   001A74                     l2316:
  1300   001A74  5044               	movf	lcd_8bit_set_cursor@row^0,w,c
  1301   001A76  6E46               	movwf	??_lcd_8bit_set_cursor^0,c
  1302   001A78  6A47               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1303                           
  1304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1305                           ; Switch size 1, requested type "simple"
  1306                           ; Number of cases is 1, Range of values is 0 to 0
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; simple_byte            4     3 (average)
  1310                           ;	Chosen strategy is simple_byte
  1311   001A7A  5047               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1312   001A7C  0A00               	xorlw	0	; case 0
  1313   001A7E  B4D8               	btfsc	status,2,c
  1314   001A80  EF44  F00D         	goto	l2802
  1315   001A84  EF36  F00D         	goto	l2314
  1316   001A88                     l2802:
  1317                           
  1318                           ; Switch size 1, requested type "simple"
  1319                           ; Number of cases is 4, Range of values is 0 to 3
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte           13     7 (average)
  1323                           ;	Chosen strategy is simple_byte
  1324   001A88  5046               	movf	??_lcd_8bit_set_cursor^0,w,c
  1325   001A8A  0A00               	xorlw	0	; case 0
  1326   001A8C  B4D8               	btfsc	status,2,c
  1327   001A8E  EF06  F00D         	goto	l2306
  1328   001A92  0A01               	xorlw	1	; case 1
  1329   001A94  B4D8               	btfsc	status,2,c
  1330   001A96  EF12  F00D         	goto	l2308
  1331   001A9A  0A03               	xorlw	3	; case 2
  1332   001A9C  B4D8               	btfsc	status,2,c
  1333   001A9E  EF1E  F00D         	goto	l2310
  1334   001AA2  0A01               	xorlw	1	; case 3
  1335   001AA4  B4D8               	btfsc	status,2,c
  1336   001AA6  EF2A  F00D         	goto	l2312
  1337   001AAA  EF36  F00D         	goto	l2314
  1338   001AAE                     l2318:
  1339                           
  1340                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 273:     return ret ;
  1341   001AAE  5048               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1342   001AB0  0012               	return		;funcret
  1343   001AB2                     __end_of_lcd_8bit_set_cursor:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _lcd_send_data_pos_4bit *****************
  1347 ;; Defined at:
  1348 ;;		line 88 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  lcd             2   26[COMRAM] PTR const struct .
  1351 ;;		 -> lcd1(6), 
  1352 ;;  data            1   28[COMRAM] unsigned char 
  1353 ;;  column          1   29[COMRAM] unsigned char 
  1354 ;;  row             1   30[COMRAM] unsigned char 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  ret             1   31[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      unsigned char 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1366 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;Total ram usage:        6 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 3
  1373 ;; This function calls:
  1374 ;;		_lcd_4bit_set_cursor
  1375 ;;		_lcd_send_data_4bit
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text8
  1382   001D7C                     __ptext8:
  1383                           	callstack 0
  1384   001D7C                     _lcd_send_data_pos_4bit:
  1385                           	callstack 27
  1386   001D7C                     
  1387                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 90:     if(((void*)0) == lcd)
  1388   001D7C  5049               	movf	lcd_send_data_pos_4bit@lcd^0,w,c
  1389   001D7E  104A               	iorwf	(lcd_send_data_pos_4bit@lcd+1)^0,w,c
  1390   001D80  A4D8               	btfss	status,2,c
  1391   001D82  EFC5  F00E         	goto	u1421
  1392   001D86  EFC7  F00E         	goto	u1420
  1393   001D8A                     u1421:
  1394   001D8A  EFCB  F00E         	goto	l2392
  1395   001D8E                     u1420:
  1396   001D8E                     
  1397                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 91:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 92:    
      +                               ret = (Std_ReturnType)0x00 ;
  1398   001D8E  0E00               	movlw	0
  1399   001D90  6E4E               	movwf	lcd_send_data_pos_4bit@ret^0,c
  1400                           
  1401                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 93:     }
  1402   001D92  EFDF  F00E         	goto	l2394
  1403   001D96                     l2392:
  1404                           
  1405                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 95:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 96:    
      +                               ret = lcd_4bit_set_cursor(lcd,row,column);
  1406   001D96  C049  F042         	movff	lcd_send_data_pos_4bit@lcd,lcd_4bit_set_cursor@lcd
  1407   001D9A  C04A  F043         	movff	lcd_send_data_pos_4bit@lcd+1,lcd_4bit_set_cursor@lcd+1
  1408   001D9E  C04D  F044         	movff	lcd_send_data_pos_4bit@row,lcd_4bit_set_cursor@row
  1409   001DA2  C04C  F045         	movff	lcd_send_data_pos_4bit@column,lcd_4bit_set_cursor@column
  1410   001DA6  EC59  F00D         	call	_lcd_4bit_set_cursor	;wreg free
  1411   001DAA  6E4E               	movwf	lcd_send_data_pos_4bit@ret^0,c
  1412                           
  1413                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 97:         ret = lcd_send_data_4bit(lcd,data);
  1414   001DAC  C049  F039         	movff	lcd_send_data_pos_4bit@lcd,lcd_send_data_4bit@lcd
  1415   001DB0  C04A  F03A         	movff	lcd_send_data_pos_4bit@lcd+1,lcd_send_data_4bit@lcd+1
  1416   001DB4  C04B  F03B         	movff	lcd_send_data_pos_4bit@data,lcd_send_data_4bit@data
  1417   001DB8  EC66  F009         	call	_lcd_send_data_4bit	;wreg free
  1418   001DBC  6E4E               	movwf	lcd_send_data_pos_4bit@ret^0,c
  1419   001DBE                     l2394:
  1420                           
  1421                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 99:     return ret ;
  1422   001DBE  504E               	movf	lcd_send_data_pos_4bit@ret^0,w,c
  1423   001DC0  0012               	return		;funcret
  1424   001DC2                     __end_of_lcd_send_data_pos_4bit:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _lcd_send_data_4bit *****************
  1428 ;; Defined at:
  1429 ;;		line 60 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  lcd             2   10[COMRAM] PTR const struct .
  1432 ;;		 -> lcd1(6), 
  1433 ;;  data            1   12[COMRAM] unsigned char 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  index           1   18[COMRAM] unsigned char 
  1436 ;;  ret             1   17[COMRAM] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      unsigned char 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:        9 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 1
  1453 ;; This function calls:
  1454 ;;		_gpio_pin_write_logic
  1455 ;; This function is called by:
  1456 ;;		_lcd_send_data_pos_4bit
  1457 ;;		_lcd_send_string_4bit
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text9
  1463   0012CC                     __ptext9:
  1464                           	callstack 0
  1465   0012CC                     _lcd_send_data_4bit:
  1466                           	callstack 27
  1467   0012CC                     
  1468                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 62:     uint8_t index = 0 ;
  1469   0012CC  0E00               	movlw	0
  1470   0012CE  6E41               	movwf	lcd_send_data_4bit@index^0,c
  1471   0012D0                     
  1472                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 63:     if(((void*)0) == lcd)
  1473   0012D0  5039               	movf	lcd_send_data_4bit@lcd^0,w,c
  1474   0012D2  103A               	iorwf	(lcd_send_data_4bit@lcd+1)^0,w,c
  1475   0012D4  A4D8               	btfss	status,2,c
  1476   0012D6  EF6F  F009         	goto	u1101
  1477   0012DA  EF71  F009         	goto	u1100
  1478   0012DE                     u1101:
  1479   0012DE  EF75  F009         	goto	l2082
  1480   0012E2                     u1100:
  1481   0012E2                     
  1482                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 64:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 65:    
      +                               ret = (Std_ReturnType)0x00 ;
  1483   0012E2  0E00               	movlw	0
  1484   0012E4  6E40               	movwf	lcd_send_data_4bit@ret^0,c
  1485                           
  1486                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 66:     }
  1487   0012E6  EF0A  F00A         	goto	l2116
  1488   0012EA                     l2082:
  1489   0012EA  C039  F02F         	movff	lcd_send_data_4bit@lcd,gpio_pin_write_logic@_pin_config
  1490   0012EE  C03A  F030         	movff	lcd_send_data_4bit@lcd+1,gpio_pin_write_logic@_pin_config+1
  1491   0012F2  0E01               	movlw	1
  1492   0012F4  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1493   0012F6  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1494   0012FA                     
  1495                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 70:         for(index = ZERO ; index < 4 ; index++)
  1496   0012FA  0E00               	movlw	0
  1497   0012FC  B4D8               	btfsc	status,2,c	;volatile
  1498   0012FE  0E01               	movlw	1
  1499   001300  6E41               	movwf	lcd_send_data_4bit@index^0,c
  1500   001302                     l2086:
  1501   001302  0E03               	movlw	3
  1502   001304  6441               	cpfsgt	lcd_send_data_4bit@index^0,c
  1503   001306  EF87  F009         	goto	u1111
  1504   00130A  EF89  F009         	goto	u1110
  1505   00130E                     u1111:
  1506   00130E  EF8B  F009         	goto	l2090
  1507   001312                     u1110:
  1508   001312  EFAD  F009         	goto	l2096
  1509   001316                     l2090:
  1510   001316  5041               	movf	lcd_send_data_4bit@index^0,w,c
  1511   001318  2439               	addwf	lcd_send_data_4bit@lcd^0,w,c
  1512   00131A  6E3C               	movwf	??_lcd_send_data_4bit^0,c
  1513   00131C  0E00               	movlw	0
  1514   00131E  203A               	addwfc	(lcd_send_data_4bit@lcd+1)^0,w,c
  1515   001320  6E3D               	movwf	(??_lcd_send_data_4bit+1)^0,c
  1516   001322  0E02               	movlw	2
  1517   001324  243C               	addwf	??_lcd_send_data_4bit^0,w,c
  1518   001326  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1519   001328  0E00               	movlw	0
  1520   00132A  203D               	addwfc	(??_lcd_send_data_4bit+1)^0,w,c
  1521   00132C  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1522   00132E  C041  F03E         	movff	lcd_send_data_4bit@index,??_lcd_send_data_4bit+2
  1523   001332  0E04               	movlw	4
  1524   001334  263E               	addwf	(??_lcd_send_data_4bit+2)^0,f,c
  1525   001336  C03B  F03F         	movff	lcd_send_data_4bit@data,??_lcd_send_data_4bit+3
  1526   00133A  2A3E               	incf	(??_lcd_send_data_4bit+2)^0,f,c
  1527   00133C  EFA2  F009         	goto	u1124
  1528   001340                     u1125:
  1529   001340  90D8               	bcf	status,0,c
  1530   001342  323F               	rrcf	(??_lcd_send_data_4bit+3)^0,f,c
  1531   001344                     u1124:
  1532   001344  2E3E               	decfsz	(??_lcd_send_data_4bit+2)^0,f,c
  1533   001346  EFA0  F009         	goto	u1125
  1534   00134A  503F               	movf	(??_lcd_send_data_4bit+3)^0,w,c
  1535   00134C  0B01               	andlw	1
  1536   00134E  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1537   001350  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1538   001354                     
  1539                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 73:         }
  1540   001354  2A41               	incf	lcd_send_data_4bit@index^0,f,c
  1541   001356  EF81  F009         	goto	l2086
  1542   00135A                     l2096:
  1543   00135A  0E01               	movlw	1
  1544   00135C  2439               	addwf	lcd_send_data_4bit@lcd^0,w,c
  1545   00135E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1546   001360  0E00               	movlw	0
  1547   001362  203A               	addwfc	(lcd_send_data_4bit@lcd+1)^0,w,c
  1548   001364  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1549   001366  0E01               	movlw	1
  1550   001368  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1551   00136A  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1552   00136E                     
  1553                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 75:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00000.0)));
  1554   00136E  D000               	nop2		;2 cycle nop
  1555   001370  D000               	nop2		;2 cycle nop
  1556   001372  F000               	nop	
  1557   001374  0E01               	movlw	1
  1558   001376  2439               	addwf	lcd_send_data_4bit@lcd^0,w,c
  1559   001378  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1560   00137A  0E00               	movlw	0
  1561   00137C  203A               	addwfc	(lcd_send_data_4bit@lcd+1)^0,w,c
  1562   00137E  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1563   001380  0E00               	movlw	0
  1564   001382  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1565   001384  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1566   001388                     
  1567                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 77:         for(index = ZERO ; index < 4 ; index++)
  1568   001388  0E00               	movlw	0
  1569   00138A  B4D8               	btfsc	status,2,c	;volatile
  1570   00138C  0E01               	movlw	1
  1571   00138E  6E41               	movwf	lcd_send_data_4bit@index^0,c
  1572   001390                     l2102:
  1573   001390  0E03               	movlw	3
  1574   001392  6441               	cpfsgt	lcd_send_data_4bit@index^0,c
  1575   001394  EFCE  F009         	goto	u1131
  1576   001398  EFD0  F009         	goto	u1130
  1577   00139C                     u1131:
  1578   00139C  EFD2  F009         	goto	l2106
  1579   0013A0                     u1130:
  1580   0013A0  EFF2  F009         	goto	l2112
  1581   0013A4                     l2106:
  1582   0013A4  5041               	movf	lcd_send_data_4bit@index^0,w,c
  1583   0013A6  2439               	addwf	lcd_send_data_4bit@lcd^0,w,c
  1584   0013A8  6E3C               	movwf	??_lcd_send_data_4bit^0,c
  1585   0013AA  0E00               	movlw	0
  1586   0013AC  203A               	addwfc	(lcd_send_data_4bit@lcd+1)^0,w,c
  1587   0013AE  6E3D               	movwf	(??_lcd_send_data_4bit+1)^0,c
  1588   0013B0  0E02               	movlw	2
  1589   0013B2  243C               	addwf	??_lcd_send_data_4bit^0,w,c
  1590   0013B4  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1591   0013B6  0E00               	movlw	0
  1592   0013B8  203D               	addwfc	(??_lcd_send_data_4bit+1)^0,w,c
  1593   0013BA  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1594   0013BC  C041  F03E         	movff	lcd_send_data_4bit@index,??_lcd_send_data_4bit+2
  1595   0013C0  C03B  F03F         	movff	lcd_send_data_4bit@data,??_lcd_send_data_4bit+3
  1596   0013C4  2A3E               	incf	(??_lcd_send_data_4bit+2)^0,f,c
  1597   0013C6  EFE7  F009         	goto	u1144
  1598   0013CA                     u1145:
  1599   0013CA  90D8               	bcf	status,0,c
  1600   0013CC  323F               	rrcf	(??_lcd_send_data_4bit+3)^0,f,c
  1601   0013CE                     u1144:
  1602   0013CE  2E3E               	decfsz	(??_lcd_send_data_4bit+2)^0,f,c
  1603   0013D0  EFE5  F009         	goto	u1145
  1604   0013D4  503F               	movf	(??_lcd_send_data_4bit+3)^0,w,c
  1605   0013D6  0B01               	andlw	1
  1606   0013D8  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1607   0013DA  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1608   0013DE                     
  1609                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 80:         }
  1610   0013DE  2A41               	incf	lcd_send_data_4bit@index^0,f,c
  1611   0013E0  EFC8  F009         	goto	l2102
  1612   0013E4                     l2112:
  1613   0013E4  0E01               	movlw	1
  1614   0013E6  2439               	addwf	lcd_send_data_4bit@lcd^0,w,c
  1615   0013E8  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1616   0013EA  0E00               	movlw	0
  1617   0013EC  203A               	addwfc	(lcd_send_data_4bit@lcd+1)^0,w,c
  1618   0013EE  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1619   0013F0  0E01               	movlw	1
  1620   0013F2  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1621   0013F4  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1622   0013F8                     
  1623                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 82:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00000.0)));
  1624   0013F8  D000               	nop2		;2 cycle nop
  1625   0013FA  D000               	nop2		;2 cycle nop
  1626   0013FC  F000               	nop	
  1627                           
  1628                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 83:         ret = gpio_pin_write_logic(&(lcd->lcd_en
      +                          ),GPIO_LOW);
  1629   0013FE  0E01               	movlw	1
  1630   001400  2439               	addwf	lcd_send_data_4bit@lcd^0,w,c
  1631   001402  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1632   001404  0E00               	movlw	0
  1633   001406  203A               	addwfc	(lcd_send_data_4bit@lcd+1)^0,w,c
  1634   001408  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  1635   00140A  0E00               	movlw	0
  1636   00140C  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  1637   00140E  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  1638   001412  6E40               	movwf	lcd_send_data_4bit@ret^0,c
  1639   001414                     l2116:
  1640                           
  1641                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 85:     return ret ;
  1642   001414  5040               	movf	lcd_send_data_4bit@ret^0,w,c
  1643   001416  0012               	return		;funcret
  1644   001418                     __end_of_lcd_send_data_4bit:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _lcd_4bit_set_cursor *****************
  1648 ;; Defined at:
  1649 ;;		line 275 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  lcd             2   19[COMRAM] PTR const struct .
  1652 ;;		 -> lcd1(6), 
  1653 ;;  row             1   21[COMRAM] unsigned char 
  1654 ;;  column          1   22[COMRAM] unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  ret             1   25[COMRAM] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      unsigned char 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;Total ram usage:        7 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 2
  1673 ;; This function calls:
  1674 ;;		_lcd_send_command_8bit
  1675 ;; This function is called by:
  1676 ;;		_lcd_send_data_pos_4bit
  1677 ;;		_lcd_send_string_pos_4bit
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text10
  1682   001AB2                     __ptext10:
  1683                           	callstack 0
  1684   001AB2                     _lcd_4bit_set_cursor:
  1685                           	callstack 27
  1686   001AB2                     
  1687                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 278:     switch(row)
  1688   001AB2  EF8F  F00D         	goto	l2278
  1689   001AB6                     l2268:
  1690   001AB6  C042  F039         	movff	lcd_4bit_set_cursor@lcd,lcd_send_command_8bit@lcd
  1691   001ABA  C043  F03A         	movff	lcd_4bit_set_cursor@lcd+1,lcd_send_command_8bit@lcd+1
  1692   001ABE  5045               	movf	lcd_4bit_set_cursor@column^0,w,c
  1693   001AC0  0F80               	addlw	128
  1694   001AC2  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1695   001AC4  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1696   001AC8  6E48               	movwf	lcd_4bit_set_cursor@ret^0,c
  1697   001ACA  EFAC  F00D         	goto	l2280
  1698   001ACE                     l2270:
  1699   001ACE  C042  F039         	movff	lcd_4bit_set_cursor@lcd,lcd_send_command_8bit@lcd
  1700   001AD2  C043  F03A         	movff	lcd_4bit_set_cursor@lcd+1,lcd_send_command_8bit@lcd+1
  1701   001AD6  5045               	movf	lcd_4bit_set_cursor@column^0,w,c
  1702   001AD8  0FC0               	addlw	192
  1703   001ADA  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1704   001ADC  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1705   001AE0  6E48               	movwf	lcd_4bit_set_cursor@ret^0,c
  1706   001AE2  EFAC  F00D         	goto	l2280
  1707   001AE6                     l2272:
  1708   001AE6  C042  F039         	movff	lcd_4bit_set_cursor@lcd,lcd_send_command_8bit@lcd
  1709   001AEA  C043  F03A         	movff	lcd_4bit_set_cursor@lcd+1,lcd_send_command_8bit@lcd+1
  1710   001AEE  5045               	movf	lcd_4bit_set_cursor@column^0,w,c
  1711   001AF0  0F94               	addlw	148
  1712   001AF2  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1713   001AF4  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1714   001AF8  6E48               	movwf	lcd_4bit_set_cursor@ret^0,c
  1715   001AFA  EFAC  F00D         	goto	l2280
  1716   001AFE                     l2274:
  1717   001AFE  C042  F039         	movff	lcd_4bit_set_cursor@lcd,lcd_send_command_8bit@lcd
  1718   001B02  C043  F03A         	movff	lcd_4bit_set_cursor@lcd+1,lcd_send_command_8bit@lcd+1
  1719   001B06  5045               	movf	lcd_4bit_set_cursor@column^0,w,c
  1720   001B08  0FD4               	addlw	212
  1721   001B0A  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1722   001B0C  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1723   001B10  6E48               	movwf	lcd_4bit_set_cursor@ret^0,c
  1724   001B12  EFAC  F00D         	goto	l2280
  1725   001B16                     l2276:
  1726   001B16  0E00               	movlw	0
  1727   001B18  6E48               	movwf	lcd_4bit_set_cursor@ret^0,c
  1728                           
  1729                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 285:     }
  1730   001B1A  EFAC  F00D         	goto	l2280
  1731   001B1E                     l2278:
  1732   001B1E  5044               	movf	lcd_4bit_set_cursor@row^0,w,c
  1733   001B20  6E46               	movwf	??_lcd_4bit_set_cursor^0,c
  1734   001B22  6A47               	clrf	(??_lcd_4bit_set_cursor+1)^0,c
  1735                           
  1736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1737                           ; Switch size 1, requested type "simple"
  1738                           ; Number of cases is 1, Range of values is 0 to 0
  1739                           ; switch strategies available:
  1740                           ; Name         Instructions Cycles
  1741                           ; simple_byte            4     3 (average)
  1742                           ;	Chosen strategy is simple_byte
  1743   001B24  5047               	movf	(??_lcd_4bit_set_cursor+1)^0,w,c
  1744   001B26  0A00               	xorlw	0	; case 0
  1745   001B28  B4D8               	btfsc	status,2,c
  1746   001B2A  EF99  F00D         	goto	l2804
  1747   001B2E  EF8B  F00D         	goto	l2276
  1748   001B32                     l2804:
  1749                           
  1750                           ; Switch size 1, requested type "simple"
  1751                           ; Number of cases is 4, Range of values is 0 to 3
  1752                           ; switch strategies available:
  1753                           ; Name         Instructions Cycles
  1754                           ; simple_byte           13     7 (average)
  1755                           ;	Chosen strategy is simple_byte
  1756   001B32  5046               	movf	??_lcd_4bit_set_cursor^0,w,c
  1757   001B34  0A00               	xorlw	0	; case 0
  1758   001B36  B4D8               	btfsc	status,2,c
  1759   001B38  EF5B  F00D         	goto	l2268
  1760   001B3C  0A01               	xorlw	1	; case 1
  1761   001B3E  B4D8               	btfsc	status,2,c
  1762   001B40  EF67  F00D         	goto	l2270
  1763   001B44  0A03               	xorlw	3	; case 2
  1764   001B46  B4D8               	btfsc	status,2,c
  1765   001B48  EF73  F00D         	goto	l2272
  1766   001B4C  0A01               	xorlw	1	; case 3
  1767   001B4E  B4D8               	btfsc	status,2,c
  1768   001B50  EF7F  F00D         	goto	l2274
  1769   001B54  EF8B  F00D         	goto	l2276
  1770   001B58                     l2280:
  1771                           
  1772                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 286:     return ret ;
  1773   001B58  5048               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1774   001B5A  0012               	return		;funcret
  1775   001B5C                     __end_of_lcd_4bit_set_cursor:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _lcd_init_8bit *****************
  1779 ;; Defined at:
  1780 ;;		line 133 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  lcd             2   19[COMRAM] PTR const struct .
  1783 ;;		 -> lcd2(10), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  ret             1   24[COMRAM] unsigned char 
  1786 ;;  index           1   23[COMRAM] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      unsigned char 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;Total ram usage:        6 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 2
  1803 ;; This function calls:
  1804 ;;		_gpio_pin_init
  1805 ;;		_lcd_send_command_8bit
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text11
  1812   001564                     __ptext11:
  1813                           	callstack 0
  1814   001564                     _lcd_init_8bit:
  1815                           	callstack 28
  1816   001564                     
  1817                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 135:     uint8_t index = 0 ;
  1818   001564  0E00               	movlw	0
  1819   001566  6E46               	movwf	lcd_init_8bit@index^0,c
  1820   001568                     
  1821                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 136:     if(((void*)0) == lcd)
  1822   001568  5042               	movf	lcd_init_8bit@lcd^0,w,c
  1823   00156A  1043               	iorwf	(lcd_init_8bit@lcd+1)^0,w,c
  1824   00156C  A4D8               	btfss	status,2,c
  1825   00156E  EFBB  F00A         	goto	u1441
  1826   001572  EFBD  F00A         	goto	u1440
  1827   001576                     u1441:
  1828   001576  EFC1  F00A         	goto	l2418
  1829   00157A                     u1440:
  1830   00157A                     
  1831                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 137:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 138:  
      +                                 ret = (Std_ReturnType)0x00 ;
  1832   00157A  0E00               	movlw	0
  1833   00157C  6E47               	movwf	lcd_init_8bit@ret^0,c
  1834                           
  1835                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 139:     }
  1836   00157E  EF44  F00B         	goto	l2452
  1837   001582                     l2418:
  1838                           
  1839                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 141:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 142:  
      +                                 ret = gpio_pin_init(&(lcd->lcd_rs));
  1840   001582  C042  F039         	movff	lcd_init_8bit@lcd,gpio_pin_init@_pin_config
  1841   001586  C043  F03A         	movff	lcd_init_8bit@lcd+1,gpio_pin_init@_pin_config+1
  1842   00158A  ECAE  F00D         	call	_gpio_pin_init	;wreg free
  1843   00158E  6E47               	movwf	lcd_init_8bit@ret^0,c
  1844                           
  1845                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 143:         ret = gpio_pin_init(&(lcd->lcd_en));
  1846   001590  0E01               	movlw	1
  1847   001592  2442               	addwf	lcd_init_8bit@lcd^0,w,c
  1848   001594  6E39               	movwf	gpio_pin_init@_pin_config^0,c
  1849   001596  0E00               	movlw	0
  1850   001598  2043               	addwfc	(lcd_init_8bit@lcd+1)^0,w,c
  1851   00159A  6E3A               	movwf	(gpio_pin_init@_pin_config+1)^0,c
  1852   00159C  ECAE  F00D         	call	_gpio_pin_init	;wreg free
  1853   0015A0  6E47               	movwf	lcd_init_8bit@ret^0,c
  1854   0015A2                     
  1855                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 144:         for(index = ZERO ; index < 8 ; index++)
  1856   0015A2  0E00               	movlw	0
  1857   0015A4  B4D8               	btfsc	status,2,c	;volatile
  1858   0015A6  0E01               	movlw	1
  1859   0015A8  6E46               	movwf	lcd_init_8bit@index^0,c
  1860   0015AA                     l2422:
  1861   0015AA  0E07               	movlw	7
  1862   0015AC  6446               	cpfsgt	lcd_init_8bit@index^0,c
  1863   0015AE  EFDB  F00A         	goto	u1451
  1864   0015B2  EFDD  F00A         	goto	u1450
  1865   0015B6                     u1451:
  1866   0015B6  EFDF  F00A         	goto	l2426
  1867   0015BA                     u1450:
  1868   0015BA  EFF0  F00A         	goto	l2432
  1869   0015BE                     l2426:
  1870   0015BE  5046               	movf	lcd_init_8bit@index^0,w,c
  1871   0015C0  2442               	addwf	lcd_init_8bit@lcd^0,w,c
  1872   0015C2  6E44               	movwf	??_lcd_init_8bit^0,c
  1873   0015C4  0E00               	movlw	0
  1874   0015C6  2043               	addwfc	(lcd_init_8bit@lcd+1)^0,w,c
  1875   0015C8  6E45               	movwf	(??_lcd_init_8bit+1)^0,c
  1876   0015CA  0E02               	movlw	2
  1877   0015CC  2444               	addwf	??_lcd_init_8bit^0,w,c
  1878   0015CE  6E39               	movwf	gpio_pin_init@_pin_config^0,c
  1879   0015D0  0E00               	movlw	0
  1880   0015D2  2045               	addwfc	(??_lcd_init_8bit+1)^0,w,c
  1881   0015D4  6E3A               	movwf	(gpio_pin_init@_pin_config+1)^0,c
  1882   0015D6  ECAE  F00D         	call	_gpio_pin_init	;wreg free
  1883   0015DA                     
  1884                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 147:         }
  1885   0015DA  2A46               	incf	lcd_init_8bit@index^0,f,c
  1886   0015DC  EFD5  F00A         	goto	l2422
  1887   0015E0                     l2432:
  1888                           
  1889                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 148:         _delay((unsigned long)((20)*(4000000UL/
      +                          4000.0)));
  1890   0015E0  0E1A               	movlw	26
  1891   0015E2  6E44               	movwf	??_lcd_init_8bit^0,c
  1892   0015E4  0EF8               	movlw	248
  1893   0015E6                     u1817:
  1894   0015E6  2EE8               	decfsz	wreg,f,c
  1895   0015E8  D7FE               	bra	u1817
  1896   0015EA  2E44               	decfsz	??_lcd_init_8bit^0,f,c
  1897   0015EC  D7FC               	bra	u1817
  1898   0015EE  D000               	nop2	
  1899   0015F0  C042  F039         	movff	lcd_init_8bit@lcd,lcd_send_command_8bit@lcd
  1900   0015F4  C043  F03A         	movff	lcd_init_8bit@lcd+1,lcd_send_command_8bit@lcd+1
  1901   0015F8  0E38               	movlw	56
  1902   0015FA  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1903   0015FC  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1904   001600                     
  1905                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 150:         _delay((unsigned long)((5)*(4000000UL/4
      +                          000.0)));
  1906   001600  0E07               	movlw	7
  1907   001602  6E44               	movwf	??_lcd_init_8bit^0,c
  1908   001604  0E7D               	movlw	125
  1909   001606                     u1827:
  1910   001606  2EE8               	decfsz	wreg,f,c
  1911   001608  D7FE               	bra	u1827
  1912   00160A  2E44               	decfsz	??_lcd_init_8bit^0,f,c
  1913   00160C  D7FC               	bra	u1827
  1914   00160E  F000               	nop	
  1915   001610  C042  F039         	movff	lcd_init_8bit@lcd,lcd_send_command_8bit@lcd
  1916   001614  C043  F03A         	movff	lcd_init_8bit@lcd+1,lcd_send_command_8bit@lcd+1
  1917   001618  0E38               	movlw	56
  1918   00161A  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1919   00161C  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1920   001620                     
  1921                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 152:         _delay((unsigned long)((150)*(4000000UL
      +                          /4000000.0)));
  1922   001620  0E32               	movlw	50
  1923   001622                     u1837:
  1924   001622  2EE8               	decfsz	wreg,f,c
  1925   001624  D7FE               	bra	u1837
  1926   001626  C042  F039         	movff	lcd_init_8bit@lcd,lcd_send_command_8bit@lcd
  1927   00162A  C043  F03A         	movff	lcd_init_8bit@lcd+1,lcd_send_command_8bit@lcd+1
  1928   00162E  0E38               	movlw	56
  1929   001630  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1930   001632  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1931   001636  C042  F039         	movff	lcd_init_8bit@lcd,lcd_send_command_8bit@lcd
  1932   00163A  C043  F03A         	movff	lcd_init_8bit@lcd+1,lcd_send_command_8bit@lcd+1
  1933   00163E  0E01               	movlw	1
  1934   001640  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1935   001642  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1936   001646  C042  F039         	movff	lcd_init_8bit@lcd,lcd_send_command_8bit@lcd
  1937   00164A  C043  F03A         	movff	lcd_init_8bit@lcd+1,lcd_send_command_8bit@lcd+1
  1938   00164E  0E02               	movlw	2
  1939   001650  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1940   001652  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1941   001656  C042  F039         	movff	lcd_init_8bit@lcd,lcd_send_command_8bit@lcd
  1942   00165A  C043  F03A         	movff	lcd_init_8bit@lcd+1,lcd_send_command_8bit@lcd+1
  1943   00165E  0E06               	movlw	6
  1944   001660  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1945   001662  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1946   001666  C042  F039         	movff	lcd_init_8bit@lcd,lcd_send_command_8bit@lcd
  1947   00166A  C043  F03A         	movff	lcd_init_8bit@lcd+1,lcd_send_command_8bit@lcd+1
  1948   00166E  0E0C               	movlw	12
  1949   001670  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1950   001672  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1951   001676                     
  1952                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 158:         ret = lcd_send_command_8bit(lcd,0X38);
  1953   001676  C042  F039         	movff	lcd_init_8bit@lcd,lcd_send_command_8bit@lcd
  1954   00167A  C043  F03A         	movff	lcd_init_8bit@lcd+1,lcd_send_command_8bit@lcd+1
  1955   00167E  0E38               	movlw	56
  1956   001680  6E3B               	movwf	lcd_send_command_8bit@command^0,c
  1957   001682  ECA5  F00C         	call	_lcd_send_command_8bit	;wreg free
  1958   001686  6E47               	movwf	lcd_init_8bit@ret^0,c
  1959   001688                     l2452:
  1960                           
  1961                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 160:     return ret ;
  1962   001688  5047               	movf	lcd_init_8bit@ret^0,w,c
  1963   00168A  0012               	return		;funcret
  1964   00168C                     __end_of_lcd_init_8bit:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _lcd_send_command_8bit *****************
  1968 ;; Defined at:
  1969 ;;		line 163 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  lcd             2   10[COMRAM] PTR const struct .
  1972 ;;		 -> lcd2(10), lcd1(6), 
  1973 ;;  command         1   12[COMRAM] unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  index           1   18[COMRAM] unsigned char 
  1976 ;;  ret             1   17[COMRAM] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      unsigned char 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1986 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;Total ram usage:        9 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; Hardware stack levels required when called: 1
  1993 ;; This function calls:
  1994 ;;		_gpio_pin_write_logic
  1995 ;; This function is called by:
  1996 ;;		_lcd_init_8bit
  1997 ;;		_lcd_8bit_set_cursor
  1998 ;;		_lcd_4bit_set_cursor
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text12
  2003   00194A                     __ptext12:
  2004                           	callstack 0
  2005   00194A                     _lcd_send_command_8bit:
  2006                           	callstack 27
  2007   00194A                     
  2008                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 165:     uint8_t index = 0 ;
  2009   00194A  0E00               	movlw	0
  2010   00194C  6E41               	movwf	lcd_send_command_8bit@index^0,c
  2011   00194E                     
  2012                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 166:     if(((void*)0) == lcd)
  2013   00194E  5039               	movf	lcd_send_command_8bit@lcd^0,w,c
  2014   001950  103A               	iorwf	(lcd_send_command_8bit@lcd+1)^0,w,c
  2015   001952  A4D8               	btfss	status,2,c
  2016   001954  EFAE  F00C         	goto	u1151
  2017   001958  EFB0  F00C         	goto	u1150
  2018   00195C                     u1151:
  2019   00195C  EFB4  F00C         	goto	l2126
  2020   001960                     u1150:
  2021   001960                     
  2022                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 167:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 168:  
      +                                 ret = (Std_ReturnType)0x00 ;
  2023   001960  0E00               	movlw	0
  2024   001962  6E40               	movwf	lcd_send_command_8bit@ret^0,c
  2025                           
  2026                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 169:     }
  2027   001964  EF02  F00D         	goto	l2144
  2028   001968                     l2126:
  2029   001968  C039  F02F         	movff	lcd_send_command_8bit@lcd,gpio_pin_write_logic@_pin_config
  2030   00196C  C03A  F030         	movff	lcd_send_command_8bit@lcd+1,gpio_pin_write_logic@_pin_config+1
  2031   001970  0E00               	movlw	0
  2032   001972  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2033   001974  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2034   001978                     
  2035                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 173:         for(index = ZERO ; index < 8 ; index++)
  2036   001978  0E00               	movlw	0
  2037   00197A  B4D8               	btfsc	status,2,c	;volatile
  2038   00197C  0E01               	movlw	1
  2039   00197E  6E41               	movwf	lcd_send_command_8bit@index^0,c
  2040   001980                     l2130:
  2041   001980  0E07               	movlw	7
  2042   001982  6441               	cpfsgt	lcd_send_command_8bit@index^0,c
  2043   001984  EFC6  F00C         	goto	u1161
  2044   001988  EFC8  F00C         	goto	u1160
  2045   00198C                     u1161:
  2046   00198C  EFCA  F00C         	goto	l2134
  2047   001990                     u1160:
  2048   001990  EFEA  F00C         	goto	l2140
  2049   001994                     l2134:
  2050   001994  5041               	movf	lcd_send_command_8bit@index^0,w,c
  2051   001996  2439               	addwf	lcd_send_command_8bit@lcd^0,w,c
  2052   001998  6E3C               	movwf	??_lcd_send_command_8bit^0,c
  2053   00199A  0E00               	movlw	0
  2054   00199C  203A               	addwfc	(lcd_send_command_8bit@lcd+1)^0,w,c
  2055   00199E  6E3D               	movwf	(??_lcd_send_command_8bit+1)^0,c
  2056   0019A0  0E02               	movlw	2
  2057   0019A2  243C               	addwf	??_lcd_send_command_8bit^0,w,c
  2058   0019A4  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2059   0019A6  0E00               	movlw	0
  2060   0019A8  203D               	addwfc	(??_lcd_send_command_8bit+1)^0,w,c
  2061   0019AA  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2062   0019AC  C041  F03E         	movff	lcd_send_command_8bit@index,??_lcd_send_command_8bit+2
  2063   0019B0  C03B  F03F         	movff	lcd_send_command_8bit@command,??_lcd_send_command_8bit+3
  2064   0019B4  2A3E               	incf	(??_lcd_send_command_8bit+2)^0,f,c
  2065   0019B6  EFDF  F00C         	goto	u1174
  2066   0019BA                     u1175:
  2067   0019BA  90D8               	bcf	status,0,c
  2068   0019BC  323F               	rrcf	(??_lcd_send_command_8bit+3)^0,f,c
  2069   0019BE                     u1174:
  2070   0019BE  2E3E               	decfsz	(??_lcd_send_command_8bit+2)^0,f,c
  2071   0019C0  EFDD  F00C         	goto	u1175
  2072   0019C4  503F               	movf	(??_lcd_send_command_8bit+3)^0,w,c
  2073   0019C6  0B01               	andlw	1
  2074   0019C8  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2075   0019CA  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2076   0019CE                     
  2077                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 176:         }
  2078   0019CE  2A41               	incf	lcd_send_command_8bit@index^0,f,c
  2079   0019D0  EFC0  F00C         	goto	l2130
  2080   0019D4                     l2140:
  2081   0019D4  0E01               	movlw	1
  2082   0019D6  2439               	addwf	lcd_send_command_8bit@lcd^0,w,c
  2083   0019D8  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2084   0019DA  0E00               	movlw	0
  2085   0019DC  203A               	addwfc	(lcd_send_command_8bit@lcd+1)^0,w,c
  2086   0019DE  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2087   0019E0  0E01               	movlw	1
  2088   0019E2  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2089   0019E4  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2090   0019E8                     
  2091                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 178:         _delay((unsigned long)((5)*(4000000UL/4
      +                          000000.0)));
  2092   0019E8  D000               	nop2		;2 cycle nop
  2093   0019EA  D000               	nop2		;2 cycle nop
  2094   0019EC  F000               	nop	
  2095                           
  2096                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 179:         ret = gpio_pin_write_logic(&(lcd->lcd_e
      +                          n),GPIO_LOW);
  2097   0019EE  0E01               	movlw	1
  2098   0019F0  2439               	addwf	lcd_send_command_8bit@lcd^0,w,c
  2099   0019F2  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2100   0019F4  0E00               	movlw	0
  2101   0019F6  203A               	addwfc	(lcd_send_command_8bit@lcd+1)^0,w,c
  2102   0019F8  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2103   0019FA  0E00               	movlw	0
  2104   0019FC  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2105   0019FE  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2106   001A02  6E40               	movwf	lcd_send_command_8bit@ret^0,c
  2107   001A04                     l2144:
  2108                           
  2109                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 181:     return ret ;
  2110   001A04  5040               	movf	lcd_send_command_8bit@ret^0,w,c
  2111   001A06  0012               	return		;funcret
  2112   001A08                     __end_of_lcd_send_command_8bit:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function _lcd_init_4bit *****************
  2116 ;; Defined at:
  2117 ;;		line 4 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  lcd             2   19[COMRAM] PTR const struct .
  2120 ;;		 -> lcd1(6), 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  ret             1   24[COMRAM] unsigned char 
  2123 ;;  index           1   23[COMRAM] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      unsigned char 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;Total ram usage:        6 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 2
  2140 ;; This function calls:
  2141 ;;		_gpio_pin_init
  2142 ;;		_lcd_send_command_4bit
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text13
  2149   00168C                     __ptext13:
  2150                           	callstack 0
  2151   00168C                     _lcd_init_4bit:
  2152                           	callstack 28
  2153   00168C                     
  2154                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 6:     uint8_t index = 0 ;
  2155   00168C  0E00               	movlw	0
  2156   00168E  6E46               	movwf	lcd_init_4bit@index^0,c
  2157   001690                     
  2158                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 7:     if(((void*)0) == lcd)
  2159   001690  5042               	movf	lcd_init_4bit@lcd^0,w,c
  2160   001692  1043               	iorwf	(lcd_init_4bit@lcd+1)^0,w,c
  2161   001694  A4D8               	btfss	status,2,c
  2162   001696  EF4F  F00B         	goto	u1401
  2163   00169A  EF51  F00B         	goto	u1400
  2164   00169E                     u1401:
  2165   00169E  EF55  F00B         	goto	l2348
  2166   0016A2                     u1400:
  2167   0016A2                     
  2168                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 8:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 9:      
      +                             ret = (Std_ReturnType)0x00 ;
  2169   0016A2  0E00               	movlw	0
  2170   0016A4  6E47               	movwf	lcd_init_4bit@ret^0,c
  2171                           
  2172                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 10:     }
  2173   0016A6  EFD8  F00B         	goto	l2382
  2174   0016AA                     l2348:
  2175                           
  2176                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 12:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 13:    
      +                               ret = gpio_pin_init(&(lcd->lcd_rs));
  2177   0016AA  C042  F039         	movff	lcd_init_4bit@lcd,gpio_pin_init@_pin_config
  2178   0016AE  C043  F03A         	movff	lcd_init_4bit@lcd+1,gpio_pin_init@_pin_config+1
  2179   0016B2  ECAE  F00D         	call	_gpio_pin_init	;wreg free
  2180   0016B6  6E47               	movwf	lcd_init_4bit@ret^0,c
  2181                           
  2182                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 14:         ret = gpio_pin_init(&(lcd->lcd_en));
  2183   0016B8  0E01               	movlw	1
  2184   0016BA  2442               	addwf	lcd_init_4bit@lcd^0,w,c
  2185   0016BC  6E39               	movwf	gpio_pin_init@_pin_config^0,c
  2186   0016BE  0E00               	movlw	0
  2187   0016C0  2043               	addwfc	(lcd_init_4bit@lcd+1)^0,w,c
  2188   0016C2  6E3A               	movwf	(gpio_pin_init@_pin_config+1)^0,c
  2189   0016C4  ECAE  F00D         	call	_gpio_pin_init	;wreg free
  2190   0016C8  6E47               	movwf	lcd_init_4bit@ret^0,c
  2191   0016CA                     
  2192                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 15:         for(index = ZERO ; index < 4 ; index++)
  2193   0016CA  0E00               	movlw	0
  2194   0016CC  B4D8               	btfsc	status,2,c	;volatile
  2195   0016CE  0E01               	movlw	1
  2196   0016D0  6E46               	movwf	lcd_init_4bit@index^0,c
  2197   0016D2                     l2352:
  2198   0016D2  0E03               	movlw	3
  2199   0016D4  6446               	cpfsgt	lcd_init_4bit@index^0,c
  2200   0016D6  EF6F  F00B         	goto	u1411
  2201   0016DA  EF71  F00B         	goto	u1410
  2202   0016DE                     u1411:
  2203   0016DE  EF73  F00B         	goto	l2356
  2204   0016E2                     u1410:
  2205   0016E2  EF84  F00B         	goto	l2362
  2206   0016E6                     l2356:
  2207   0016E6  5046               	movf	lcd_init_4bit@index^0,w,c
  2208   0016E8  2442               	addwf	lcd_init_4bit@lcd^0,w,c
  2209   0016EA  6E44               	movwf	??_lcd_init_4bit^0,c
  2210   0016EC  0E00               	movlw	0
  2211   0016EE  2043               	addwfc	(lcd_init_4bit@lcd+1)^0,w,c
  2212   0016F0  6E45               	movwf	(??_lcd_init_4bit+1)^0,c
  2213   0016F2  0E02               	movlw	2
  2214   0016F4  2444               	addwf	??_lcd_init_4bit^0,w,c
  2215   0016F6  6E39               	movwf	gpio_pin_init@_pin_config^0,c
  2216   0016F8  0E00               	movlw	0
  2217   0016FA  2045               	addwfc	(??_lcd_init_4bit+1)^0,w,c
  2218   0016FC  6E3A               	movwf	(gpio_pin_init@_pin_config+1)^0,c
  2219   0016FE  ECAE  F00D         	call	_gpio_pin_init	;wreg free
  2220   001702                     
  2221                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 18:         }
  2222   001702  2A46               	incf	lcd_init_4bit@index^0,f,c
  2223   001704  EF69  F00B         	goto	l2352
  2224   001708                     l2362:
  2225                           
  2226                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 19:         _delay((unsigned long)((20)*(4000000UL/4
      +                          000.0)));
  2227   001708  0E1A               	movlw	26
  2228   00170A  6E44               	movwf	??_lcd_init_4bit^0,c
  2229   00170C  0EF8               	movlw	248
  2230   00170E                     u1847:
  2231   00170E  2EE8               	decfsz	wreg,f,c
  2232   001710  D7FE               	bra	u1847
  2233   001712  2E44               	decfsz	??_lcd_init_4bit^0,f,c
  2234   001714  D7FC               	bra	u1847
  2235   001716  D000               	nop2	
  2236   001718  C042  F039         	movff	lcd_init_4bit@lcd,lcd_send_command_4bit@lcd
  2237   00171C  C043  F03A         	movff	lcd_init_4bit@lcd+1,lcd_send_command_4bit@lcd+1
  2238   001720  0E28               	movlw	40
  2239   001722  6E3B               	movwf	lcd_send_command_4bit@command^0,c
  2240   001724  EC0C  F00A         	call	_lcd_send_command_4bit	;wreg free
  2241   001728                     
  2242                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 21:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00.0)));
  2243   001728  0E07               	movlw	7
  2244   00172A  6E44               	movwf	??_lcd_init_4bit^0,c
  2245   00172C  0E7D               	movlw	125
  2246   00172E                     u1857:
  2247   00172E  2EE8               	decfsz	wreg,f,c
  2248   001730  D7FE               	bra	u1857
  2249   001732  2E44               	decfsz	??_lcd_init_4bit^0,f,c
  2250   001734  D7FC               	bra	u1857
  2251   001736  F000               	nop	
  2252   001738  C042  F039         	movff	lcd_init_4bit@lcd,lcd_send_command_4bit@lcd
  2253   00173C  C043  F03A         	movff	lcd_init_4bit@lcd+1,lcd_send_command_4bit@lcd+1
  2254   001740  0E28               	movlw	40
  2255   001742  6E3B               	movwf	lcd_send_command_4bit@command^0,c
  2256   001744  EC0C  F00A         	call	_lcd_send_command_4bit	;wreg free
  2257   001748                     
  2258                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 23:         _delay((unsigned long)((150)*(4000000UL/
      +                          4000000.0)));
  2259   001748  0E32               	movlw	50
  2260   00174A                     u1867:
  2261   00174A  2EE8               	decfsz	wreg,f,c
  2262   00174C  D7FE               	bra	u1867
  2263   00174E  C042  F039         	movff	lcd_init_4bit@lcd,lcd_send_command_4bit@lcd
  2264   001752  C043  F03A         	movff	lcd_init_4bit@lcd+1,lcd_send_command_4bit@lcd+1
  2265   001756  0E28               	movlw	40
  2266   001758  6E3B               	movwf	lcd_send_command_4bit@command^0,c
  2267   00175A  EC0C  F00A         	call	_lcd_send_command_4bit	;wreg free
  2268   00175E  C042  F039         	movff	lcd_init_4bit@lcd,lcd_send_command_4bit@lcd
  2269   001762  C043  F03A         	movff	lcd_init_4bit@lcd+1,lcd_send_command_4bit@lcd+1
  2270   001766  0E01               	movlw	1
  2271   001768  6E3B               	movwf	lcd_send_command_4bit@command^0,c
  2272   00176A  EC0C  F00A         	call	_lcd_send_command_4bit	;wreg free
  2273   00176E  C042  F039         	movff	lcd_init_4bit@lcd,lcd_send_command_4bit@lcd
  2274   001772  C043  F03A         	movff	lcd_init_4bit@lcd+1,lcd_send_command_4bit@lcd+1
  2275   001776  0E02               	movlw	2
  2276   001778  6E3B               	movwf	lcd_send_command_4bit@command^0,c
  2277   00177A  EC0C  F00A         	call	_lcd_send_command_4bit	;wreg free
  2278   00177E  C042  F039         	movff	lcd_init_4bit@lcd,lcd_send_command_4bit@lcd
  2279   001782  C043  F03A         	movff	lcd_init_4bit@lcd+1,lcd_send_command_4bit@lcd+1
  2280   001786  0E06               	movlw	6
  2281   001788  6E3B               	movwf	lcd_send_command_4bit@command^0,c
  2282   00178A  EC0C  F00A         	call	_lcd_send_command_4bit	;wreg free
  2283   00178E  C042  F039         	movff	lcd_init_4bit@lcd,lcd_send_command_4bit@lcd
  2284   001792  C043  F03A         	movff	lcd_init_4bit@lcd+1,lcd_send_command_4bit@lcd+1
  2285   001796  0E0C               	movlw	12
  2286   001798  6E3B               	movwf	lcd_send_command_4bit@command^0,c
  2287   00179A  EC0C  F00A         	call	_lcd_send_command_4bit	;wreg free
  2288   00179E                     
  2289                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 29:         ret = lcd_send_command_4bit(lcd,0X28);
  2290   00179E  C042  F039         	movff	lcd_init_4bit@lcd,lcd_send_command_4bit@lcd
  2291   0017A2  C043  F03A         	movff	lcd_init_4bit@lcd+1,lcd_send_command_4bit@lcd+1
  2292   0017A6  0E28               	movlw	40
  2293   0017A8  6E3B               	movwf	lcd_send_command_4bit@command^0,c
  2294   0017AA  EC0C  F00A         	call	_lcd_send_command_4bit	;wreg free
  2295   0017AE  6E47               	movwf	lcd_init_4bit@ret^0,c
  2296   0017B0                     l2382:
  2297                           
  2298                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 31:     return ret ;
  2299   0017B0  5047               	movf	lcd_init_4bit@ret^0,w,c
  2300   0017B2  0012               	return		;funcret
  2301   0017B4                     __end_of_lcd_init_4bit:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _lcd_send_command_4bit *****************
  2305 ;; Defined at:
  2306 ;;		line 33 in file "ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  lcd             2   10[COMRAM] PTR const struct .
  2309 ;;		 -> lcd1(6), 
  2310 ;;  command         1   12[COMRAM] unsigned char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  index           1   18[COMRAM] unsigned char 
  2313 ;;  ret             1   17[COMRAM] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      unsigned char 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2323 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;Total ram usage:        9 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 1
  2330 ;; This function calls:
  2331 ;;		_gpio_pin_write_logic
  2332 ;; This function is called by:
  2333 ;;		_lcd_init_4bit
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text14
  2338   001418                     __ptext14:
  2339                           	callstack 0
  2340   001418                     _lcd_send_command_4bit:
  2341                           	callstack 28
  2342   001418                     
  2343                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 35:     uint8_t index = 0 ;
  2344   001418  0E00               	movlw	0
  2345   00141A  6E41               	movwf	lcd_send_command_4bit@index^0,c
  2346   00141C                     
  2347                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 36:     if(((void*)0) == lcd)
  2348   00141C  5039               	movf	lcd_send_command_4bit@lcd^0,w,c
  2349   00141E  103A               	iorwf	(lcd_send_command_4bit@lcd+1)^0,w,c
  2350   001420  A4D8               	btfss	status,2,c
  2351   001422  EF15  F00A         	goto	u1311
  2352   001426  EF17  F00A         	goto	u1310
  2353   00142A                     u1311:
  2354   00142A  EF1B  F00A         	goto	l2228
  2355   00142E                     u1310:
  2356   00142E                     
  2357                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 37:     {;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 38:    
      +                               ret = (Std_ReturnType)0x00 ;
  2358   00142E  0E00               	movlw	0
  2359   001430  6E40               	movwf	lcd_send_command_4bit@ret^0,c
  2360                           
  2361                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 39:     }
  2362   001432  EFB0  F00A         	goto	l2262
  2363   001436                     l2228:
  2364   001436  C039  F02F         	movff	lcd_send_command_4bit@lcd,gpio_pin_write_logic@_pin_config
  2365   00143A  C03A  F030         	movff	lcd_send_command_4bit@lcd+1,gpio_pin_write_logic@_pin_config+1
  2366   00143E  0E00               	movlw	0
  2367   001440  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2368   001442  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2369   001446                     
  2370                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 43:         for(index = ZERO ; index < 4 ; index++)
  2371   001446  0E00               	movlw	0
  2372   001448  B4D8               	btfsc	status,2,c	;volatile
  2373   00144A  0E01               	movlw	1
  2374   00144C  6E41               	movwf	lcd_send_command_4bit@index^0,c
  2375   00144E                     l2232:
  2376   00144E  0E03               	movlw	3
  2377   001450  6441               	cpfsgt	lcd_send_command_4bit@index^0,c
  2378   001452  EF2D  F00A         	goto	u1321
  2379   001456  EF2F  F00A         	goto	u1320
  2380   00145A                     u1321:
  2381   00145A  EF31  F00A         	goto	l2236
  2382   00145E                     u1320:
  2383   00145E  EF53  F00A         	goto	l2242
  2384   001462                     l2236:
  2385   001462  5041               	movf	lcd_send_command_4bit@index^0,w,c
  2386   001464  2439               	addwf	lcd_send_command_4bit@lcd^0,w,c
  2387   001466  6E3C               	movwf	??_lcd_send_command_4bit^0,c
  2388   001468  0E00               	movlw	0
  2389   00146A  203A               	addwfc	(lcd_send_command_4bit@lcd+1)^0,w,c
  2390   00146C  6E3D               	movwf	(??_lcd_send_command_4bit+1)^0,c
  2391   00146E  0E02               	movlw	2
  2392   001470  243C               	addwf	??_lcd_send_command_4bit^0,w,c
  2393   001472  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2394   001474  0E00               	movlw	0
  2395   001476  203D               	addwfc	(??_lcd_send_command_4bit+1)^0,w,c
  2396   001478  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2397   00147A  C041  F03E         	movff	lcd_send_command_4bit@index,??_lcd_send_command_4bit+2
  2398   00147E  0E04               	movlw	4
  2399   001480  263E               	addwf	(??_lcd_send_command_4bit+2)^0,f,c
  2400   001482  C03B  F03F         	movff	lcd_send_command_4bit@command,??_lcd_send_command_4bit+3
  2401   001486  2A3E               	incf	(??_lcd_send_command_4bit+2)^0,f,c
  2402   001488  EF48  F00A         	goto	u1334
  2403   00148C                     u1335:
  2404   00148C  90D8               	bcf	status,0,c
  2405   00148E  323F               	rrcf	(??_lcd_send_command_4bit+3)^0,f,c
  2406   001490                     u1334:
  2407   001490  2E3E               	decfsz	(??_lcd_send_command_4bit+2)^0,f,c
  2408   001492  EF46  F00A         	goto	u1335
  2409   001496  503F               	movf	(??_lcd_send_command_4bit+3)^0,w,c
  2410   001498  0B01               	andlw	1
  2411   00149A  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2412   00149C  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2413   0014A0                     
  2414                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 46:         }
  2415   0014A0  2A41               	incf	lcd_send_command_4bit@index^0,f,c
  2416   0014A2  EF27  F00A         	goto	l2232
  2417   0014A6                     l2242:
  2418   0014A6  0E01               	movlw	1
  2419   0014A8  2439               	addwf	lcd_send_command_4bit@lcd^0,w,c
  2420   0014AA  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2421   0014AC  0E00               	movlw	0
  2422   0014AE  203A               	addwfc	(lcd_send_command_4bit@lcd+1)^0,w,c
  2423   0014B0  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2424   0014B2  0E01               	movlw	1
  2425   0014B4  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2426   0014B6  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2427   0014BA                     
  2428                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 48:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00000.0)));
  2429   0014BA  D000               	nop2		;2 cycle nop
  2430   0014BC  D000               	nop2		;2 cycle nop
  2431   0014BE  F000               	nop	
  2432   0014C0  0E01               	movlw	1
  2433   0014C2  2439               	addwf	lcd_send_command_4bit@lcd^0,w,c
  2434   0014C4  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2435   0014C6  0E00               	movlw	0
  2436   0014C8  203A               	addwfc	(lcd_send_command_4bit@lcd+1)^0,w,c
  2437   0014CA  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2438   0014CC  0E00               	movlw	0
  2439   0014CE  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2440   0014D0  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2441   0014D4                     
  2442                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 50:         for(index = ZERO ; index < 4 ; index++)
  2443   0014D4  0E00               	movlw	0
  2444   0014D6  B4D8               	btfsc	status,2,c	;volatile
  2445   0014D8  0E01               	movlw	1
  2446   0014DA  6E41               	movwf	lcd_send_command_4bit@index^0,c
  2447   0014DC                     l2248:
  2448   0014DC  0E03               	movlw	3
  2449   0014DE  6441               	cpfsgt	lcd_send_command_4bit@index^0,c
  2450   0014E0  EF74  F00A         	goto	u1341
  2451   0014E4  EF76  F00A         	goto	u1340
  2452   0014E8                     u1341:
  2453   0014E8  EF78  F00A         	goto	l2252
  2454   0014EC                     u1340:
  2455   0014EC  EF98  F00A         	goto	l2258
  2456   0014F0                     l2252:
  2457   0014F0  5041               	movf	lcd_send_command_4bit@index^0,w,c
  2458   0014F2  2439               	addwf	lcd_send_command_4bit@lcd^0,w,c
  2459   0014F4  6E3C               	movwf	??_lcd_send_command_4bit^0,c
  2460   0014F6  0E00               	movlw	0
  2461   0014F8  203A               	addwfc	(lcd_send_command_4bit@lcd+1)^0,w,c
  2462   0014FA  6E3D               	movwf	(??_lcd_send_command_4bit+1)^0,c
  2463   0014FC  0E02               	movlw	2
  2464   0014FE  243C               	addwf	??_lcd_send_command_4bit^0,w,c
  2465   001500  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2466   001502  0E00               	movlw	0
  2467   001504  203D               	addwfc	(??_lcd_send_command_4bit+1)^0,w,c
  2468   001506  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2469   001508  C041  F03E         	movff	lcd_send_command_4bit@index,??_lcd_send_command_4bit+2
  2470   00150C  C03B  F03F         	movff	lcd_send_command_4bit@command,??_lcd_send_command_4bit+3
  2471   001510  2A3E               	incf	(??_lcd_send_command_4bit+2)^0,f,c
  2472   001512  EF8D  F00A         	goto	u1354
  2473   001516                     u1355:
  2474   001516  90D8               	bcf	status,0,c
  2475   001518  323F               	rrcf	(??_lcd_send_command_4bit+3)^0,f,c
  2476   00151A                     u1354:
  2477   00151A  2E3E               	decfsz	(??_lcd_send_command_4bit+2)^0,f,c
  2478   00151C  EF8B  F00A         	goto	u1355
  2479   001520  503F               	movf	(??_lcd_send_command_4bit+3)^0,w,c
  2480   001522  0B01               	andlw	1
  2481   001524  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2482   001526  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2483   00152A                     
  2484                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 53:         }
  2485   00152A  2A41               	incf	lcd_send_command_4bit@index^0,f,c
  2486   00152C  EF6E  F00A         	goto	l2248
  2487   001530                     l2258:
  2488   001530  0E01               	movlw	1
  2489   001532  2439               	addwf	lcd_send_command_4bit@lcd^0,w,c
  2490   001534  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2491   001536  0E00               	movlw	0
  2492   001538  203A               	addwfc	(lcd_send_command_4bit@lcd+1)^0,w,c
  2493   00153A  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2494   00153C  0E01               	movlw	1
  2495   00153E  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2496   001540  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2497   001544                     
  2498                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 55:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00000.0)));
  2499   001544  D000               	nop2		;2 cycle nop
  2500   001546  D000               	nop2		;2 cycle nop
  2501   001548  F000               	nop	
  2502                           
  2503                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 56:         ret = gpio_pin_write_logic(&(lcd->lcd_en
      +                          ),GPIO_LOW);
  2504   00154A  0E01               	movlw	1
  2505   00154C  2439               	addwf	lcd_send_command_4bit@lcd^0,w,c
  2506   00154E  6E2F               	movwf	gpio_pin_write_logic@_pin_config^0,c
  2507   001550  0E00               	movlw	0
  2508   001552  203A               	addwfc	(lcd_send_command_4bit@lcd+1)^0,w,c
  2509   001554  6E30               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  2510   001556  0E00               	movlw	0
  2511   001558  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2512   00155A  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2513   00155E  6E40               	movwf	lcd_send_command_4bit@ret^0,c
  2514   001560                     l2262:
  2515                           
  2516                           ;ECU_LAYER/CHAR_LCD/ECU_CHAR_LCD.c: 58:     return ret ;
  2517   001560  5040               	movf	lcd_send_command_4bit@ret^0,w,c
  2518   001562  0012               	return		;funcret
  2519   001564                     __end_of_lcd_send_command_4bit:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _gpio_pin_init *****************
  2523 ;; Defined at:
  2524 ;;		line 170 in file "MCAL_LAYER/GPIO/HAL_GPIO.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  _pin_config     2   10[COMRAM] PTR const struct .
  2527 ;;		 -> lcd2.lcd_data(8), lcd2(10), lcd1.lcd_data(4), lcd1(6), 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  ret             1   13[COMRAM] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      unsigned char 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;Total ram usage:        4 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 1
  2546 ;; This function calls:
  2547 ;;		_gpio_pin_direction_init
  2548 ;;		_gpio_pin_write_logic
  2549 ;; This function is called by:
  2550 ;;		_lcd_init_4bit
  2551 ;;		_lcd_init_8bit
  2552 ;;		__7_segments_init
  2553 ;;		_keybad_init
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text15
  2558   001B5C                     __ptext15:
  2559                           	callstack 0
  2560   001B5C                     _gpio_pin_init:
  2561                           	callstack 28
  2562   001B5C                     
  2563                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 173:     if(((void*)0) == _pin_config)
  2564   001B5C  5039               	movf	gpio_pin_init@_pin_config^0,w,c
  2565   001B5E  103A               	iorwf	(gpio_pin_init@_pin_config+1)^0,w,c
  2566   001B60  A4D8               	btfss	status,2,c
  2567   001B62  EFB5  F00D         	goto	u1281
  2568   001B66  EFB7  F00D         	goto	u1280
  2569   001B6A                     u1281:
  2570   001B6A  EFBB  F00D         	goto	l2210
  2571   001B6E                     u1280:
  2572   001B6E                     l2208:
  2573                           
  2574                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 174:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 175:        ret = (S
      +                          td_ReturnType)0x00 ;
  2575   001B6E  0E00               	movlw	0
  2576   001B70  6E3C               	movwf	gpio_pin_init@ret^0,c
  2577                           
  2578                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 176:     }
  2579   001B72  EFF3  F00D         	goto	l2218
  2580   001B76                     l2210:
  2581   001B76  C039  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  2582   001B7A  C03A  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  2583   001B7E  30DF               	rrcf	223,w,c
  2584   001B80  32E8               	rrcf	wreg,f,c
  2585   001B82  32E8               	rrcf	wreg,f,c
  2586   001B84  0B07               	andlw	7
  2587   001B86  6E3B               	movwf	??_gpio_pin_init^0,c
  2588   001B88  0E08               	movlw	8
  2589   001B8A  603B               	cpfslt	??_gpio_pin_init^0,c
  2590   001B8C  EFCA  F00D         	goto	u1291
  2591   001B90  EFCC  F00D         	goto	u1290
  2592   001B94                     u1291:
  2593   001B94  EFB7  F00D         	goto	l2208
  2594   001B98                     u1290:
  2595   001B98  C039  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  2596   001B9C  C03A  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  2597   001BA0  50DF               	movf	223,w,c
  2598   001BA2  0B07               	andlw	7
  2599   001BA4  6E3B               	movwf	??_gpio_pin_init^0,c
  2600   001BA6  0E03               	movlw	3
  2601   001BA8  643B               	cpfsgt	??_gpio_pin_init^0,c
  2602   001BAA  EFD9  F00D         	goto	u1301
  2603   001BAE  EFDB  F00D         	goto	u1300
  2604   001BB2                     u1301:
  2605   001BB2  EFDD  F00D         	goto	l2216
  2606   001BB6                     u1300:
  2607   001BB6  EFB7  F00D         	goto	l2208
  2608   001BBA                     l2216:
  2609                           
  2610                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 182:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 183:         ret = g
      +                          pio_pin_direction_init(_pin_config);
  2611   001BBA  C039  F02F         	movff	gpio_pin_init@_pin_config,gpio_pin_direction_init@_pin_config
  2612   001BBE  C03A  F030         	movff	gpio_pin_init@_pin_config+1,gpio_pin_direction_init@_pin_config+1
  2613   001BC2  EC0C  F008         	call	_gpio_pin_direction_init	;wreg free
  2614   001BC6  6E3C               	movwf	gpio_pin_init@ret^0,c
  2615                           
  2616                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 184:         ret = gpio_pin_write_logic(_pin_config,_pin_co
      +                          nfig->Logic);
  2617   001BC8  C039  F02F         	movff	gpio_pin_init@_pin_config,gpio_pin_write_logic@_pin_config
  2618   001BCC  C03A  F030         	movff	gpio_pin_init@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  2619   001BD0  C039  FFD9         	movff	gpio_pin_init@_pin_config,fsr2l
  2620   001BD4  C03A  FFDA         	movff	gpio_pin_init@_pin_config+1,fsr2h
  2621   001BD8  0E00               	movlw	0
  2622   001BDA  BEDF               	btfsc	indf2,7,c
  2623   001BDC  0E01               	movlw	1
  2624   001BDE  6E31               	movwf	gpio_pin_write_logic@logic^0,c
  2625   001BE0  ECBF  F008         	call	_gpio_pin_write_logic	;wreg free
  2626   001BE4  6E3C               	movwf	gpio_pin_init@ret^0,c
  2627   001BE6                     l2218:
  2628                           
  2629                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 186:     return ret ;
  2630   001BE6  503C               	movf	gpio_pin_init@ret^0,w,c
  2631   001BE8  0012               	return		;funcret
  2632   001BEA                     __end_of_gpio_pin_init:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function _gpio_pin_write_logic *****************
  2636 ;; Defined at:
  2637 ;;		line 84 in file "MCAL_LAYER/GPIO/HAL_GPIO.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  2640 ;;		 -> lcd1.lcd_data(8), lcd2.lcd_data(8), lcd2(10), lcd1.lcd_data(4), 
  2641 ;;		 -> lcd1(6), Relay_TurnOff@rel(1), Relay_TurnOn@rel(1), led_turn_off@Pin_obj(1), 
  2642 ;;		 -> led_turn_on@Pin_obj(1), pin2(1), pin1(1), 
  2643 ;;  logic           1    2[COMRAM] enum E2798
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  ret             1    9[COMRAM] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      unsigned char 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2655 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;Total ram usage:       10 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_lcd_send_command_4bit
  2665 ;;		_lcd_send_data_4bit
  2666 ;;		_lcd_send_command_8bit
  2667 ;;		_lcd_send_data_8bit
  2668 ;;		_gpio_pin_init
  2669 ;;		__7_segments_write_number
  2670 ;;		_Dc_Motor_Turn_Right
  2671 ;;		_Dc_Motor_Turn_Left
  2672 ;;		_Dc_Motor_Stop
  2673 ;;		_keybad_get_value
  2674 ;;		_led_turn_on
  2675 ;;		_led_turn_off
  2676 ;;		_Relay_TurnOn
  2677 ;;		_Relay_TurnOff
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text16
  2682   00117E                     __ptext16:
  2683                           	callstack 0
  2684   00117E                     _gpio_pin_write_logic:
  2685                           	callstack 27
  2686   00117E                     
  2687                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 85:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2688   00117E  0E01               	movlw	1
  2689   001180  6E38               	movwf	gpio_pin_write_logic@ret^0,c
  2690   001182                     
  2691                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 86:     if(((void*)0) == _pin_config)
  2692   001182  502F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  2693   001184  1030               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  2694   001186  A4D8               	btfss	status,2,c
  2695   001188  EFC8  F008         	goto	u1051
  2696   00118C  EFCA  F008         	goto	u1050
  2697   001190                     u1051:
  2698   001190  EFCE  F008         	goto	l2054
  2699   001194                     u1050:
  2700   001194                     l2052:
  2701                           
  2702                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 87:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 88:        ret = (Std
      +                          _ReturnType)0x00 ;
  2703   001194  0E00               	movlw	0
  2704   001196  6E38               	movwf	gpio_pin_write_logic@ret^0,c
  2705                           
  2706                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 89:     }
  2707   001198  EF64  F009         	goto	l2068
  2708   00119C                     l2054:
  2709   00119C  C02F  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2710   0011A0  C030  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2711   0011A4  30DF               	rrcf	223,w,c
  2712   0011A6  32E8               	rrcf	wreg,f,c
  2713   0011A8  32E8               	rrcf	wreg,f,c
  2714   0011AA  0B07               	andlw	7
  2715   0011AC  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2716   0011AE  0E08               	movlw	8
  2717   0011B0  6032               	cpfslt	??_gpio_pin_write_logic^0,c
  2718   0011B2  EFDD  F008         	goto	u1061
  2719   0011B6  EFDF  F008         	goto	u1060
  2720   0011BA                     u1061:
  2721   0011BA  EFCA  F008         	goto	l2052
  2722   0011BE                     u1060:
  2723   0011BE  C02F  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2724   0011C2  C030  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2725   0011C6  50DF               	movf	223,w,c
  2726   0011C8  0B07               	andlw	7
  2727   0011CA  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2728   0011CC  0E03               	movlw	3
  2729   0011CE  6432               	cpfsgt	??_gpio_pin_write_logic^0,c
  2730   0011D0  EFEC  F008         	goto	u1071
  2731   0011D4  EFEE  F008         	goto	u1070
  2732   0011D8                     u1071:
  2733   0011D8  EF4F  F009         	goto	l2066
  2734   0011DC                     u1070:
  2735   0011DC  EFCA  F008         	goto	l2052
  2736   0011E0                     l2060:
  2737                           
  2738                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 99:                 (*lat_registers[_pin_config->Port] &= ~
      +                          ((uint8_t)1<<_pin_config->Pin_Number));
  2739   0011E0  C02F  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2740   0011E4  C030  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2741   0011E8  30DF               	rrcf	223,w,c
  2742   0011EA  32E8               	rrcf	wreg,f,c
  2743   0011EC  32E8               	rrcf	wreg,f,c
  2744   0011EE  0B07               	andlw	7
  2745   0011F0  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2746   0011F2  0E01               	movlw	1
  2747   0011F4  6E33               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2748   0011F6  2A32               	incf	??_gpio_pin_write_logic^0,f,c
  2749   0011F8  EF00  F009         	goto	u1084
  2750   0011FC                     u1085:
  2751   0011FC  90D8               	bcf	status,0,c
  2752   0011FE  3633               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2753   001200                     u1084:
  2754   001200  2E32               	decfsz	??_gpio_pin_write_logic^0,f,c
  2755   001202  EFFE  F008         	goto	u1085
  2756   001206  5033               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2757   001208  0AFF               	xorlw	255
  2758   00120A  6E34               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2759   00120C  C02F  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2760   001210  C030  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2761   001214  50DF               	movf	223,w,c
  2762   001216  0B07               	andlw	7
  2763   001218  6E35               	movwf	(??_gpio_pin_write_logic+3)^0,c
  2764   00121A  5035               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  2765   00121C  0D02               	mullw	2
  2766   00121E  0E01               	movlw	low _lat_registers
  2767   001220  24F3               	addwf	243,w,c
  2768   001222  6ED9               	movwf	fsr2l,c
  2769   001224  0E00               	movlw	high _lat_registers
  2770   001226  20F4               	addwfc	prodh,w,c
  2771   001228  6EDA               	movwf	fsr2h,c
  2772   00122A  CFDE F036          	movff	postinc2,??_gpio_pin_write_logic+4
  2773   00122E  CFDD F037          	movff	postdec2,??_gpio_pin_write_logic+5
  2774   001232  C036  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  2775   001236  C037  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  2776   00123A  5034               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2777   00123C  16DF               	andwf	indf2,f,c
  2778                           
  2779                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 100:                 break;
  2780   00123E  EF64  F009         	goto	l2068
  2781   001242                     l2062:
  2782                           
  2783                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 102:                 (*lat_registers[_pin_config->Port] |= 
      +                          ((uint8_t)1<<_pin_config->Pin_Number));
  2784   001242  C02F  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2785   001246  C030  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2786   00124A  30DF               	rrcf	223,w,c
  2787   00124C  32E8               	rrcf	wreg,f,c
  2788   00124E  32E8               	rrcf	wreg,f,c
  2789   001250  0B07               	andlw	7
  2790   001252  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2791   001254  0E01               	movlw	1
  2792   001256  6E33               	movwf	(??_gpio_pin_write_logic+1)^0,c
  2793   001258  2A32               	incf	??_gpio_pin_write_logic^0,f,c
  2794   00125A  EF31  F009         	goto	u1094
  2795   00125E                     u1095:
  2796   00125E  90D8               	bcf	status,0,c
  2797   001260  3633               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2798   001262                     u1094:
  2799   001262  2E32               	decfsz	??_gpio_pin_write_logic^0,f,c
  2800   001264  EF2F  F009         	goto	u1095
  2801   001268  C02F  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  2802   00126C  C030  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  2803   001270  50DF               	movf	223,w,c
  2804   001272  0B07               	andlw	7
  2805   001274  6E34               	movwf	(??_gpio_pin_write_logic+2)^0,c
  2806   001276  5034               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2807   001278  0D02               	mullw	2
  2808   00127A  0E01               	movlw	low _lat_registers
  2809   00127C  24F3               	addwf	243,w,c
  2810   00127E  6ED9               	movwf	fsr2l,c
  2811   001280  0E00               	movlw	high _lat_registers
  2812   001282  20F4               	addwfc	prodh,w,c
  2813   001284  6EDA               	movwf	fsr2h,c
  2814   001286  CFDE F035          	movff	postinc2,??_gpio_pin_write_logic+3
  2815   00128A  CFDD F036          	movff	postdec2,??_gpio_pin_write_logic+4
  2816   00128E  C035  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2817   001292  C036  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2818   001296  5033               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2819   001298  12DF               	iorwf	indf2,f,c
  2820                           
  2821                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 103:                 break;
  2822   00129A  EF64  F009         	goto	l2068
  2823   00129E                     l2066:
  2824   00129E  5031               	movf	gpio_pin_write_logic@logic^0,w,c
  2825   0012A0  6E32               	movwf	??_gpio_pin_write_logic^0,c
  2826   0012A2  6A33               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2827                           
  2828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2829                           ; Switch size 1, requested type "simple"
  2830                           ; Number of cases is 1, Range of values is 0 to 0
  2831                           ; switch strategies available:
  2832                           ; Name         Instructions Cycles
  2833                           ; simple_byte            4     3 (average)
  2834                           ;	Chosen strategy is simple_byte
  2835   0012A4  5033               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2836   0012A6  0A00               	xorlw	0	; case 0
  2837   0012A8  B4D8               	btfsc	status,2,c
  2838   0012AA  EF59  F009         	goto	l2806
  2839   0012AE  EFCA  F008         	goto	l2052
  2840   0012B2                     l2806:
  2841                           
  2842                           ; Switch size 1, requested type "simple"
  2843                           ; Number of cases is 2, Range of values is 0 to 1
  2844                           ; switch strategies available:
  2845                           ; Name         Instructions Cycles
  2846                           ; simple_byte            7     4 (average)
  2847                           ;	Chosen strategy is simple_byte
  2848   0012B2  5032               	movf	??_gpio_pin_write_logic^0,w,c
  2849   0012B4  0A00               	xorlw	0	; case 0
  2850   0012B6  B4D8               	btfsc	status,2,c
  2851   0012B8  EFF0  F008         	goto	l2060
  2852   0012BC  0A01               	xorlw	1	; case 1
  2853   0012BE  B4D8               	btfsc	status,2,c
  2854   0012C0  EF21  F009         	goto	l2062
  2855   0012C4  EFCA  F008         	goto	l2052
  2856   0012C8                     l2068:
  2857                           
  2858                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 108:     return ret ;
  2859   0012C8  5038               	movf	gpio_pin_write_logic@ret^0,w,c
  2860   0012CA  0012               	return		;funcret
  2861   0012CC                     __end_of_gpio_pin_write_logic:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _gpio_pin_direction_init *****************
  2865 ;; Defined at:
  2866 ;;		line 22 in file "MCAL_LAYER/GPIO/HAL_GPIO.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  2869 ;;		 -> lcd2.lcd_data(8), lcd2(10), lcd1.lcd_data(4), lcd1(6), 
  2870 ;;		 -> Relay_init@rel(1), led_init@Pin_obj(1), pin2(1), pin1(1), 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  ret             1    8[COMRAM] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      unsigned char 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:        9 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_gpio_pin_init
  2892 ;;		_Dc_Motor_INIT
  2893 ;;		_keybad_init
  2894 ;;		_led_init
  2895 ;;		_button_init
  2896 ;;		_Relay_init
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text17
  2901   001018                     __ptext17:
  2902                           	callstack 0
  2903   001018                     _gpio_pin_direction_init:
  2904                           	callstack 28
  2905   001018                     
  2906                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 23:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  2907   001018  0E01               	movlw	1
  2908   00101A  6E37               	movwf	gpio_pin_direction_init@ret^0,c
  2909   00101C                     
  2910                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 24:     if(((void*)0) == _pin_config)
  2911   00101C  502F               	movf	gpio_pin_direction_init@_pin_config^0,w,c
  2912   00101E  1030               	iorwf	(gpio_pin_direction_init@_pin_config+1)^0,w,c
  2913   001020  A4D8               	btfss	status,2,c
  2914   001022  EF15  F008         	goto	u1211
  2915   001026  EF17  F008         	goto	u1210
  2916   00102A                     u1211:
  2917   00102A  EF1B  F008         	goto	l2182
  2918   00102E                     u1210:
  2919   00102E                     l2180:
  2920                           
  2921                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 25:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 26:        ret = (Std
      +                          _ReturnType)0x00 ;
  2922   00102E  0E00               	movlw	0
  2923   001030  6E37               	movwf	gpio_pin_direction_init@ret^0,c
  2924                           
  2925                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 27:     }
  2926   001032  EFBD  F008         	goto	l2196
  2927   001036                     l2182:
  2928   001036  C02F  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  2929   00103A  C030  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  2930   00103E  30DF               	rrcf	223,w,c
  2931   001040  32E8               	rrcf	wreg,f,c
  2932   001042  32E8               	rrcf	wreg,f,c
  2933   001044  0B07               	andlw	7
  2934   001046  6E31               	movwf	??_gpio_pin_direction_init^0,c
  2935   001048  0E08               	movlw	8
  2936   00104A  6031               	cpfslt	??_gpio_pin_direction_init^0,c
  2937   00104C  EF2A  F008         	goto	u1221
  2938   001050  EF2C  F008         	goto	u1220
  2939   001054                     u1221:
  2940   001054  EF17  F008         	goto	l2180
  2941   001058                     u1220:
  2942   001058  C02F  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  2943   00105C  C030  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  2944   001060  50DF               	movf	223,w,c
  2945   001062  0B07               	andlw	7
  2946   001064  6E31               	movwf	??_gpio_pin_direction_init^0,c
  2947   001066  0E03               	movlw	3
  2948   001068  6431               	cpfsgt	??_gpio_pin_direction_init^0,c
  2949   00106A  EF39  F008         	goto	u1231
  2950   00106E  EF3B  F008         	goto	u1230
  2951   001072                     u1231:
  2952   001072  EF9C  F008         	goto	l2194
  2953   001076                     u1230:
  2954   001076  EF17  F008         	goto	l2180
  2955   00107A                     l2188:
  2956                           
  2957                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 37:                 (*tris_registers[_pin_config->Port] &= 
      +                          ~((uint8_t)1<<_pin_config->Pin_Number));
  2958   00107A  C02F  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  2959   00107E  C030  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  2960   001082  30DF               	rrcf	223,w,c
  2961   001084  32E8               	rrcf	wreg,f,c
  2962   001086  32E8               	rrcf	wreg,f,c
  2963   001088  0B07               	andlw	7
  2964   00108A  6E31               	movwf	??_gpio_pin_direction_init^0,c
  2965   00108C  0E01               	movlw	1
  2966   00108E  6E32               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2967   001090  2A31               	incf	??_gpio_pin_direction_init^0,f,c
  2968   001092  EF4D  F008         	goto	u1244
  2969   001096                     u1245:
  2970   001096  90D8               	bcf	status,0,c
  2971   001098  3632               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2972   00109A                     u1244:
  2973   00109A  2E31               	decfsz	??_gpio_pin_direction_init^0,f,c
  2974   00109C  EF4B  F008         	goto	u1245
  2975   0010A0  5032               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2976   0010A2  0AFF               	xorlw	255
  2977   0010A4  6E33               	movwf	(??_gpio_pin_direction_init+2)^0,c
  2978   0010A6  C02F  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  2979   0010AA  C030  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  2980   0010AE  50DF               	movf	223,w,c
  2981   0010B0  0B07               	andlw	7
  2982   0010B2  6E34               	movwf	(??_gpio_pin_direction_init+3)^0,c
  2983   0010B4  5034               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  2984   0010B6  0D02               	mullw	2
  2985   0010B8  0E15               	movlw	low _tris_registers
  2986   0010BA  24F3               	addwf	243,w,c
  2987   0010BC  6ED9               	movwf	fsr2l,c
  2988   0010BE  0E00               	movlw	high _tris_registers
  2989   0010C0  20F4               	addwfc	prodh,w,c
  2990   0010C2  6EDA               	movwf	fsr2h,c
  2991   0010C4  CFDE F035          	movff	postinc2,??_gpio_pin_direction_init+4
  2992   0010C8  CFDD F036          	movff	postdec2,??_gpio_pin_direction_init+5
  2993   0010CC  C035  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  2994   0010D0  C036  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  2995   0010D4  5033               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  2996   0010D6  16DF               	andwf	indf2,f,c
  2997                           
  2998                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 38:                 break;
  2999   0010D8  EFBD  F008         	goto	l2196
  3000   0010DC                     l2190:
  3001                           
  3002                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 40:                 (*tris_registers[_pin_config->Port] |= 
      +                          ((uint8_t)1<<_pin_config->Pin_Number));
  3003   0010DC  C02F  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3004   0010E0  C030  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3005   0010E4  30DF               	rrcf	223,w,c
  3006   0010E6  32E8               	rrcf	wreg,f,c
  3007   0010E8  32E8               	rrcf	wreg,f,c
  3008   0010EA  0B07               	andlw	7
  3009   0010EC  6E31               	movwf	??_gpio_pin_direction_init^0,c
  3010   0010EE  0E01               	movlw	1
  3011   0010F0  6E32               	movwf	(??_gpio_pin_direction_init+1)^0,c
  3012   0010F2  2A31               	incf	??_gpio_pin_direction_init^0,f,c
  3013   0010F4  EF7E  F008         	goto	u1254
  3014   0010F8                     u1255:
  3015   0010F8  90D8               	bcf	status,0,c
  3016   0010FA  3632               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  3017   0010FC                     u1254:
  3018   0010FC  2E31               	decfsz	??_gpio_pin_direction_init^0,f,c
  3019   0010FE  EF7C  F008         	goto	u1255
  3020   001102  C02F  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3021   001106  C030  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3022   00110A  50DF               	movf	223,w,c
  3023   00110C  0B07               	andlw	7
  3024   00110E  6E33               	movwf	(??_gpio_pin_direction_init+2)^0,c
  3025   001110  5033               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  3026   001112  0D02               	mullw	2
  3027   001114  0E15               	movlw	low _tris_registers
  3028   001116  24F3               	addwf	243,w,c
  3029   001118  6ED9               	movwf	fsr2l,c
  3030   00111A  0E00               	movlw	high _tris_registers
  3031   00111C  20F4               	addwfc	prodh,w,c
  3032   00111E  6EDA               	movwf	fsr2h,c
  3033   001120  CFDE F034          	movff	postinc2,??_gpio_pin_direction_init+3
  3034   001124  CFDD F035          	movff	postdec2,??_gpio_pin_direction_init+4
  3035   001128  C034  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  3036   00112C  C035  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  3037   001130  5032               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  3038   001132  12DF               	iorwf	indf2,f,c
  3039                           
  3040                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 41:                 break;
  3041   001134  EFBD  F008         	goto	l2196
  3042   001138                     l2194:
  3043   001138  C02F  FFD9         	movff	gpio_pin_direction_init@_pin_config,fsr2l
  3044   00113C  C030  FFDA         	movff	gpio_pin_direction_init@_pin_config+1,fsr2h
  3045   001140  BCDF               	btfsc	indf2,6,c
  3046   001142  EFA5  F008         	goto	u1261
  3047   001146  EFA8  F008         	goto	u1260
  3048   00114A                     u1261:
  3049   00114A  0E01               	movlw	1
  3050   00114C  EFA9  F008         	goto	u1270
  3051   001150                     u1260:
  3052   001150  0E00               	movlw	0
  3053   001152                     u1270:
  3054   001152  6E31               	movwf	??_gpio_pin_direction_init^0,c
  3055   001154  6A32               	clrf	(??_gpio_pin_direction_init+1)^0,c
  3056                           
  3057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3058                           ; Switch size 1, requested type "simple"
  3059                           ; Number of cases is 1, Range of values is 0 to 0
  3060                           ; switch strategies available:
  3061                           ; Name         Instructions Cycles
  3062                           ; simple_byte            4     3 (average)
  3063                           ;	Chosen strategy is simple_byte
  3064   001156  5032               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  3065   001158  0A00               	xorlw	0	; case 0
  3066   00115A  B4D8               	btfsc	status,2,c
  3067   00115C  EFB2  F008         	goto	l2808
  3068   001160  EF17  F008         	goto	l2180
  3069   001164                     l2808:
  3070                           
  3071                           ; Switch size 1, requested type "simple"
  3072                           ; Number of cases is 2, Range of values is 0 to 1
  3073                           ; switch strategies available:
  3074                           ; Name         Instructions Cycles
  3075                           ; simple_byte            7     4 (average)
  3076                           ;	Chosen strategy is simple_byte
  3077   001164  5031               	movf	??_gpio_pin_direction_init^0,w,c
  3078   001166  0A00               	xorlw	0	; case 0
  3079   001168  B4D8               	btfsc	status,2,c
  3080   00116A  EF3D  F008         	goto	l2188
  3081   00116E  0A01               	xorlw	1	; case 1
  3082   001170  B4D8               	btfsc	status,2,c
  3083   001172  EF6E  F008         	goto	l2190
  3084   001176  EF17  F008         	goto	l2180
  3085   00117A                     l2196:
  3086                           
  3087                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 46:     return ret ;
  3088   00117A  5037               	movf	gpio_pin_direction_init@ret^0,w,c
  3089   00117C  0012               	return		;funcret
  3090   00117E                     __end_of_gpio_pin_direction_init:
  3091                           	callstack 0
  3092                           
  3093                           	psect	rparam
  3094   000000                     
  3095                           	psect	idloc
  3096                           
  3097                           ;Config register IDLOC0 @ 0x200000
  3098                           ;	unspecified, using default values
  3099   200000                     	org	2097152
  3100   200000  FF                 	db	255
  3101                           
  3102                           ;Config register IDLOC1 @ 0x200001
  3103                           ;	unspecified, using default values
  3104   200001                     	org	2097153
  3105   200001  FF                 	db	255
  3106                           
  3107                           ;Config register IDLOC2 @ 0x200002
  3108                           ;	unspecified, using default values
  3109   200002                     	org	2097154
  3110   200002  FF                 	db	255
  3111                           
  3112                           ;Config register IDLOC3 @ 0x200003
  3113                           ;	unspecified, using default values
  3114   200003                     	org	2097155
  3115   200003  FF                 	db	255
  3116                           
  3117                           ;Config register IDLOC4 @ 0x200004
  3118                           ;	unspecified, using default values
  3119   200004                     	org	2097156
  3120   200004  FF                 	db	255
  3121                           
  3122                           ;Config register IDLOC5 @ 0x200005
  3123                           ;	unspecified, using default values
  3124   200005                     	org	2097157
  3125   200005  FF                 	db	255
  3126                           
  3127                           ;Config register IDLOC6 @ 0x200006
  3128                           ;	unspecified, using default values
  3129   200006                     	org	2097158
  3130   200006  FF                 	db	255
  3131                           
  3132                           ;Config register IDLOC7 @ 0x200007
  3133                           ;	unspecified, using default values
  3134   200007                     	org	2097159
  3135   200007  FF                 	db	255
  3136                           
  3137                           	psect	config
  3138                           
  3139                           ; Padding undefined space
  3140   300000                     	org	3145728
  3141   300000  FF                 	db	255
  3142                           
  3143                           ;Config register CONFIG1H @ 0x300001
  3144                           ;	Oscillator Selection bits
  3145                           ;	OSC = HS, HS oscillator
  3146                           ;	Fail-Safe Clock Monitor Enable bit
  3147                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3148                           ;	Internal/External Oscillator Switchover bit
  3149                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3150   300001                     	org	3145729
  3151   300001  02                 	db	2
  3152                           
  3153                           ;Config register CONFIG2L @ 0x300002
  3154                           ;	Power-up Timer Enable bit
  3155                           ;	PWRT = OFF, PWRT disabled
  3156                           ;	Brown-out Reset Enable bits
  3157                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3158                           ;	Brown Out Reset Voltage bits
  3159                           ;	BORV = 1, 
  3160   300002                     	org	3145730
  3161   300002  09                 	db	9
  3162                           
  3163                           ;Config register CONFIG2H @ 0x300003
  3164                           ;	Watchdog Timer Enable bit
  3165                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3166                           ;	Watchdog Timer Postscale Select bits
  3167                           ;	WDTPS = 32768, 1:32768
  3168   300003                     	org	3145731
  3169   300003  1E                 	db	30
  3170                           
  3171                           ; Padding undefined space
  3172   300004                     	org	3145732
  3173   300004  FF                 	db	255
  3174                           
  3175                           ;Config register CONFIG3H @ 0x300005
  3176                           ;	CCP2 MUX bit
  3177                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3178                           ;	PORTB A/D Enable bit
  3179                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3180                           ;	Low-Power Timer1 Oscillator Enable bit
  3181                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3182                           ;	MCLR Pin Enable bit
  3183                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3184   300005                     	org	3145733
  3185   300005  81                 	db	129
  3186                           
  3187                           ;Config register CONFIG4L @ 0x300006
  3188                           ;	Stack Full/Underflow Reset Enable bit
  3189                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3190                           ;	Single-Supply ICSP Enable bit
  3191                           ;	LVP = OFF, Single-Supply ICSP disabled
  3192                           ;	Extended Instruction Set Enable bit
  3193                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3194                           ;	Background Debugger Enable bit
  3195                           ;	DEBUG = 0x1, unprogrammed default
  3196   300006                     	org	3145734
  3197   300006  81                 	db	129
  3198                           
  3199                           ; Padding undefined space
  3200   300007                     	org	3145735
  3201   300007  FF                 	db	255
  3202                           
  3203                           ;Config register CONFIG5L @ 0x300008
  3204                           ;	Code Protection bit
  3205                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3206                           ;	Code Protection bit
  3207                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3208                           ;	Code Protection bit
  3209                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3210                           ;	Code Protection bit
  3211                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3212   300008                     	org	3145736
  3213   300008  0F                 	db	15
  3214                           
  3215                           ;Config register CONFIG5H @ 0x300009
  3216                           ;	Boot Block Code Protection bit
  3217                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3218                           ;	Data EEPROM Code Protection bit
  3219                           ;	CPD = OFF, Data EEPROM not code-protected
  3220   300009                     	org	3145737
  3221   300009  C0                 	db	192
  3222                           
  3223                           ;Config register CONFIG6L @ 0x30000A
  3224                           ;	Write Protection bit
  3225                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3226                           ;	Write Protection bit
  3227                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3228                           ;	Write Protection bit
  3229                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3230                           ;	Write Protection bit
  3231                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3232   30000A                     	org	3145738
  3233   30000A  0F                 	db	15
  3234                           
  3235                           ;Config register CONFIG6H @ 0x30000B
  3236                           ;	Configuration Register Write Protection bit
  3237                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3238                           ;	Boot Block Write Protection bit
  3239                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3240                           ;	Data EEPROM Write Protection bit
  3241                           ;	WRTD = OFF, Data EEPROM not write-protected
  3242   30000B                     	org	3145739
  3243   30000B  E0                 	db	224
  3244                           
  3245                           ;Config register CONFIG7L @ 0x30000C
  3246                           ;	Table Read Protection bit
  3247                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3248                           ;	Table Read Protection bit
  3249                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3250                           ;	Table Read Protection bit
  3251                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3252                           ;	Table Read Protection bit
  3253                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3254   30000C                     	org	3145740
  3255   30000C  0F                 	db	15
  3256                           
  3257                           ;Config register CONFIG7H @ 0x30000D
  3258                           ;	Boot Block Table Read Protection bit
  3259                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3260   30000D                     	org	3145741
  3261   30000D  40                 	db	64
  3262                           tosu	equ	0xFFF
  3263                           tosh	equ	0xFFE
  3264                           tosl	equ	0xFFD
  3265                           stkptr	equ	0xFFC
  3266                           pclatu	equ	0xFFB
  3267                           pclath	equ	0xFFA
  3268                           pcl	equ	0xFF9
  3269                           tblptru	equ	0xFF8
  3270                           tblptrh	equ	0xFF7
  3271                           tblptrl	equ	0xFF6
  3272                           tablat	equ	0xFF5
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           indf0	equ	0xFEF
  3276                           postinc0	equ	0xFEE
  3277                           postdec0	equ	0xFED
  3278                           preinc0	equ	0xFEC
  3279                           plusw0	equ	0xFEB
  3280                           fsr0h	equ	0xFEA
  3281                           fsr0l	equ	0xFE9
  3282                           wreg	equ	0xFE8
  3283                           indf1	equ	0xFE7
  3284                           postinc1	equ	0xFE6
  3285                           postdec1	equ	0xFE5
  3286                           preinc1	equ	0xFE4
  3287                           plusw1	equ	0xFE3
  3288                           fsr1h	equ	0xFE2
  3289                           fsr1l	equ	0xFE1
  3290                           bsr	equ	0xFE0
  3291                           indf2	equ	0xFDF
  3292                           postinc2	equ	0xFDE
  3293                           postdec2	equ	0xFDD
  3294                           preinc2	equ	0xFDC
  3295                           plusw2	equ	0xFDB
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    16
    Data        46
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     33      88
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_init@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd2.lcd_data(COMRAM[8]), lcd2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd1.lcd_data(COMRAM[8]), lcd2.lcd_data(COMRAM[8]), lcd2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), 
		 -> lcd1(COMRAM[6]), Relay_TurnOff@rel(COMRAM[1]), Relay_TurnOn@rel(COMRAM[1]), led_turn_off@Pin_obj(COMRAM[1]), 
		 -> led_turn_on@Pin_obj(COMRAM[1]), pin2(COMRAM[1]), pin1(COMRAM[1]), 

    gpio_pin_direction_init@_pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd2.lcd_data(COMRAM[8]), lcd2(COMRAM[10]), lcd1.lcd_data(COMRAM[4]), lcd1(COMRAM[6]), 
		 -> Relay_init@rel(COMRAM[1]), led_init@Pin_obj(COMRAM[1]), pin2(COMRAM[1]), pin1(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllh[1]), LATD(BITBIGSFRllh[1]), LATC(BITBIGSFRllh[1]), LATB(BITBIGSFRllh[1]), 
		 -> LATA(BITBIGSFRlll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlll[1]), PORTD(BITBIGSFRlll[1]), PORTC(BITBIGSFRlll[1]), PORTB(BITBIGSFRlll[1]), 
		 -> PORTA(BITBIGSFRlll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRlh[1]), TRISD(BITBIGSFRlh[1]), TRISC(BITBIGSFRlh[1]), TRISB(BITBIGSFRlh[1]), 
		 -> TRISA(BITBIGSFRlll[1]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_string_pos_8bit@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    lcd_send_string_pos_8bit@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_string_8bit@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    lcd_send_string_8bit@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_data_pos_8bit@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_data_8bit@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_command_8bit@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2(COMRAM[10]), lcd1(COMRAM[6]), 

    lcd_init_8bit@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd2(COMRAM[10]), 

    lcd_send_string_pos_4bit@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    lcd_send_string_pos_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_string_4bit@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    lcd_send_string_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_data_pos_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_data_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_command_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_init_4bit@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_lcd_send_string_pos_4bit
    _main->_lcd_send_string_pos_8bit
    _lcd_send_string_pos_8bit->_lcd_8bit_set_cursor
    _lcd_send_string_8bit->_lcd_send_data_8bit
    _lcd_send_string_pos_4bit->_lcd_4bit_set_cursor
    _lcd_send_string_4bit->_lcd_send_data_4bit
    _lcd_send_data_pos_8bit->_lcd_8bit_set_cursor
    _lcd_send_data_8bit->_gpio_pin_write_logic
    _lcd_8bit_set_cursor->_lcd_send_command_8bit
    _lcd_send_data_pos_4bit->_lcd_4bit_set_cursor
    _lcd_send_data_4bit->_gpio_pin_write_logic
    _lcd_4bit_set_cursor->_lcd_send_command_8bit
    _lcd_init_8bit->_lcd_send_command_8bit
    _lcd_send_command_8bit->_gpio_pin_write_logic
    _lcd_init_4bit->_lcd_send_command_4bit
    _lcd_send_command_4bit->_gpio_pin_write_logic
    _gpio_pin_init->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  117869
                      _lcd_init_4bit
                      _lcd_init_8bit
                 _lcd_send_data_4bit
                 _lcd_send_data_8bit
             _lcd_send_data_pos_4bit
             _lcd_send_data_pos_8bit
           _lcd_send_string_pos_4bit
           _lcd_send_string_pos_8bit
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string_pos_8bit                             7     1      6   17364
                                             26 COMRAM     7     1      6
                _lcd_8bit_set_cursor
               _lcd_send_string_8bit
 ---------------------------------------------------------------------------------
 (2) _lcd_send_string_8bit                                 5     1      4    7255
                                             19 COMRAM     5     1      4
                 _lcd_send_data_8bit
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string_pos_4bit                             7     1      6   17545
                                             26 COMRAM     7     1      6
                _lcd_4bit_set_cursor
               _lcd_send_string_4bit
 ---------------------------------------------------------------------------------
 (2) _lcd_send_string_4bit                                 5     1      4    7436
                                             19 COMRAM     5     1      4
                 _lcd_send_data_4bit
 ---------------------------------------------------------------------------------
 (1) _lcd_send_data_pos_8bit                               6     1      5   17402
                                             26 COMRAM     6     1      5
                _lcd_8bit_set_cursor
                 _lcd_send_data_8bit
 ---------------------------------------------------------------------------------
 (3) _lcd_send_data_8bit                                   9     6      3    6989
                                             10 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4    9647
                                             19 COMRAM     7     3      4
              _lcd_send_command_8bit
 ---------------------------------------------------------------------------------
 (1) _lcd_send_data_pos_4bit                               6     1      5   17583
                                             26 COMRAM     6     1      5
                _lcd_4bit_set_cursor
                 _lcd_send_data_4bit
 ---------------------------------------------------------------------------------
 (3) _lcd_send_data_4bit                                   9     6      3    7170
                                             10 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  7     3      4    9647
                                             19 COMRAM     7     3      4
              _lcd_send_command_8bit
 ---------------------------------------------------------------------------------
 (1) _lcd_init_8bit                                        6     4      2   17420
                                             19 COMRAM     6     4      2
                      _gpio_pin_init
              _lcd_send_command_8bit
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command_8bit                                9     6      3    8965
                                             10 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _lcd_init_4bit                                        6     4      2   16385
                                             19 COMRAM     6     4      2
                      _gpio_pin_init
              _lcd_send_command_4bit
 ---------------------------------------------------------------------------------
 (2) _lcd_send_command_4bit                                9     6      3    7930
                                             10 COMRAM     9     6      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_init                                        4     2      2    8011
                                             10 COMRAM     4     2      2
            _gpio_pin_direction_init
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    6282
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2     734
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init_4bit
     _gpio_pin_init
       _gpio_pin_direction_init
       _gpio_pin_write_logic
     _lcd_send_command_4bit
       _gpio_pin_write_logic
   _lcd_init_8bit
     _gpio_pin_init
     _lcd_send_command_8bit
       _gpio_pin_write_logic
   _lcd_send_data_4bit
     _gpio_pin_write_logic
   _lcd_send_data_8bit
     _gpio_pin_write_logic
   _lcd_send_data_pos_4bit
     _lcd_4bit_set_cursor
       _lcd_send_command_8bit
     _lcd_send_data_4bit
   _lcd_send_data_pos_8bit
     _lcd_8bit_set_cursor
       _lcd_send_command_8bit
     _lcd_send_data_8bit
   _lcd_send_string_pos_4bit
     _lcd_4bit_set_cursor
     _lcd_send_string_4bit
       _lcd_send_data_4bit
   _lcd_send_string_pos_8bit
     _lcd_8bit_set_cursor
     _lcd_send_string_8bit
       _lcd_send_data_8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     21      58       1       69.3%
BITBIGSFRlh         41      0       0      38        0.0%
BITBIGSFRh          27      0       0      37        0.0%
BITBIGSFRllh         4      0       0      39        0.0%
BITBIGSFRlll         4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      58      26        0.0%
DATA                 0      0      58       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 25 17:41:02 2023

                                l62 1DC0                                  l70 1CA4  
                                l39 17B2                                  l48 1562  
                                l57 1416                                  l82 168A  
                                l75 1D34                                  l96 1948  
                                l89 1A06                                 l101 1D7A  
                               l114 1CEC                                 l133 1AB0  
                               l109 1C46                                 l143 1B5A  
                               l405 1BE8                                 l351 117C  
                               l460 1884                                 l376 12CA  
                               l459 1884          __end_of_lcd_send_data_4bit 1418  
        __end_of_lcd_send_data_8bit 194A                                 prod 000FF3  
                               wreg 000FE8          lcd_send_command_4bit@index 0041  
       __end_of_lcd_8bit_set_cursor 1AB2                                l2100 1388  
                              l2102 1390                                l2120 194A  
                              l2112 13E4                                l2050 1182  
                              l2210 1B76                                l2130 1980  
                              l2122 194E                                l2114 13F8  
                              l2106 13A4                                l2060 11E0  
                              l2052 1194                                l2212 1B98  
                              l2204 1B5C                                l2140 19D4  
                              l2124 1960                                l2108 13DE  
                              l2116 1414                                l2300 1CA2  
                              l2062 1242                                l2054 119C  
                              l2206 1B5C                                l2230 1446  
                              l2222 1418                                l2142 19E8  
                              l2134 1994                                l2126 1968  
                              l2310 1A3C                                l2150 1890  
                              l2056 11BE                                l2048 117E  
                              l2216 1BBA                                l2208 1B6E  
                              l2232 144E                                l2224 141C  
                              l2136 19CE                                l2128 1978  
                              l2144 1A04                                l2080 12E2  
                              l2312 1A54                                l2304 1A08  
                              l2152 18A2                                l2400 1CEE  
                              l2066 129E                                l2218 1BE6  
                              l2242 14A6                                l2226 142E  
                              l2090 1316                                l2082 12EA  
                              l2314 1A6C                                l2306 1A0C  
                              l2170 192A                                l2162 18D6  
                              l2154 18AA                                l2402 1D00  
                              l2330 1C00                                l2180 102E  
                              l2068 12C8                                l2260 1544  
                              l2252 14F0                                l2244 14BA  
                              l2236 1462                                l2228 1436  
                              l2420 15A2                                l2412 1564  
                              l2092 1354                                l2084 12FA  
                              l2076 12CC                                l2308 1A24  
                              l2316 1A74                                l2164 1910  
                              l2156 18BA                                l2172 1946  
                              l2148 188C                                l2404 1D08  
                              l2332 1C08                                l2190 10DC  
                              l2182 1036                                l2254 152A  
                              l2246 14D4                                l2238 14A0  
                              l2262 1560                                l2350 16CA  
                              l2342 168C                                l2422 15AA  
                              l2414 1568                                l2270 1ACE  
                              l2086 1302                                l2078 12D0  
                              l2318 1AAE                                l2158 18C2  
                              l2406 1D1C                                l2334 1C24  
                              l2326 1BEA                                l2184 1058  
                              l2176 1018                                l2248 14DC  
                              l2352 16D2                                l2344 1690  
                              l2440 1626                                l2432 15E0  
                              l2416 157A                                l2272 1AE6  
                              l2280 1B58                                l2096 135A  
                              l2168 1916                                l2408 1D32  
                              l2336 1C28                                l2328 1BEE  
                              l2194 1138                                l2178 101C  
                              l2258 1530                                l2370 174E  
                              l2362 1708                                l2346 16A2  
                              l2450 1676                                l2442 1636  
                              l2434 15F0                                l2426 15BE  
                              l2418 1582                                l2274 1AFE  
                              l2266 1AB2                                l2098 136E  
                              l2290 1C4C                                l2338 1C44  
                              l2188 107A                                l2196 117A  
                              l2380 179E                                l2372 175E  
                              l2364 1718                                l2356 16E6  
                              l2348 16AA                                l2444 1646  
                              l2436 1600                                l2428 15DA  
                              l2452 1688                                l2276 1B16  
                              l2268 1AB6                                l2460 1D48  
                              l2292 1C5E                                l2374 176E  
                              l2366 1728                                l2358 1702  
                              l2382 17B0                                l2446 1656  
                              l2438 1620                                l2278 1B1E  
                              l2390 1D8E                                l2462 1D50  
                              l2294 1C66                                l2470 1CA6  
                              l2376 177E                                l2368 1748  
                              l2448 1666                                l2392 1D96  
                              l2464 1D78                                l2456 1D36  
                              l2296 1C82                                l2288 1C48  
                              l2472 1CB8                                l2378 178E  
                              l2394 1DBE                                l2386 1D7C  
                              l2802 1A88                                l2458 1D36  
                              l2298 1C86                                l2474 1CC0  
                              l2804 1B32                                l2388 1D7C  
                              l2476 1CD4                                l2468 1CA6  
                              l2806 12B2                                l2398 1CEE  
                              l2478 1CEA                                l2808 1164  
                              l2770 17CC                                l2780 1838  
                              l2772 17DC                                l2764 17B4  
                              l2782 1850                                l2774 17F4  
                              l2766 17B4          ??_lcd_send_string_pos_4bit 004F  
                              l2784 1868                                l2776 180C  
                              l2768 17C0                                l2778 1828  
        ??_lcd_send_string_pos_8bit 004F                                STR_1 1011  
                              STR_2 1011                                u1100 12E2  
                              u1101 12DE                                u1110 1312  
                              u1111 130E                                u1210 102E  
                              u1050 1194                                u1130 13A0  
                              u1211 102A                                u1051 1190  
                              u1131 139C                                u1220 1058  
                              u1060 11BE                                u1300 1BB6  
                              u1124 1344                                u1204 1900  
                              u1221 1054                                u1061 11BA  
                              u1301 1BB2                                u1125 1340  
                              u1205 18FC                                u1230 1076  
                              u1070 11DC                                u1310 142E  
                              u1150 1960                                u1231 1072  
                              u1071 11D8                                u1311 142A  
                              u1151 195C                                u1320 145E  
                              u1400 16A2                                u1160 1990  
                              u1144 13CE                                u1321 145A  
                              u1401 169E                                u1161 198C  
                              u1145 13CA                                u1410 16E2  
                              u1411 16DE                                u1260 1150  
                              u1244 109A                                u1084 1200  
                              u1340 14EC                                u1420 1D8E  
                              u1180 18A2                                u1261 114A  
                              u1245 1096                                u1085 11FC  
                              u1341 14E8                                u1421 1D8A  
                              u1181 189E                                _LATA 000F89  
                              u1270 1152                                u1254 10FC  
                              u1094 1262                                u1334 1490  
                              u1174 19BE                                u1190 18D2  
                              u1430 1D00                                _LATB 000F8A  
                              u1255 10F8                                u1095 125E  
                              u1335 148C                                u1175 19BA  
                              u1191 18CE                                u1431 1CFC  
                              _LATC 000F8B                                u1280 1B6E  
                              u1440 157A                                u1360 1C5E  
                              _LATD 000F8C                                u1281 1B6A  
                              u1441 1576                                u1361 1C5A  
                              _LATE 000F8D                                u1290 1B98  
                              u1354 151A                                u1450 15BA  
                              u1370 1CA2                                u1291 1B94  
                              u1355 1516                                u1451 15B6  
                              u1371 1C9E                                u1460 1D48  
                              u1380 1C00                                u1461 1D44  
                              u1381 1BFC                                u1390 1C44  
                              u1470 1CB8                                u1391 1C40  
                              u1471 1CB4                                u1817 15E6  
                              u1827 1606                                u1837 1622  
                              u1847 170E                                u1857 172E  
                              u1867 174A                                _ZERO 007EC2  
                              _lcd1 0029                                _lcd2 001F  
                              _main 17B4                                _pin1 0058  
                              _pin2 0057                                fsr2h 000FDA  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9            ?_gpio_pin_direction_init 002F  
                              prodl 000FF3                                start 0000  
        lcd_send_command_8bit@index 0041                        ___param_bank 000000  
              _gpio_pin_write_logic 117E                               ?_main 002F  
                             _PORTA 000F80                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _PORTE 000F84                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
         lcd_4bit_set_cursor@column 0045                     ??_lcd_init_4bit 0044  
                   ??_lcd_init_8bit 0044                               tablat 000FF5  
                             status 000FD8        lcd_send_command_4bit@command 003B  
                   __initialization 1DC2                        __end_of_main 188C  
             ?_gpio_pin_write_logic 002F              lcd_8bit_set_cursor@lcd 0042  
            lcd_8bit_set_cursor@ret 0048              lcd_8bit_set_cursor@row 0044  
                     _lat_registers 0001                              ??_main 0050  
                     __activetblptr 000002                    led_turn_on@F2884 0055  
           ??_lcd_send_command_4bit 003C             ??_lcd_send_command_8bit 003C  
                     _gpio_pin_init 1B5C                              clear_0 1DE8  
                            isa$std 000001              _lcd_send_data_pos_4bit 1D7C  
            _lcd_send_data_pos_8bit 1D36             lcd_send_string_4bit@lcd 0042  
           lcd_send_string_4bit@ret 0046             lcd_send_string_4bit@str 0044  
             lcd_send_data_4bit@lcd 0039               lcd_send_data_4bit@ret 0040  
                     led_init@F2879 0056                        __pdataCOMRAM 0001  
      lcd_send_data_pos_4bit@column 004C             lcd_send_string_8bit@lcd 0042  
           lcd_send_string_8bit@ret 0046             lcd_send_string_8bit@str 0044  
             lcd_send_data_8bit@lcd 0039                        __mediumconst 0000  
             lcd_send_data_8bit@ret 0040                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
  __end_of_lcd_send_string_pos_4bit 1D36    __end_of_lcd_send_string_pos_8bit 1CEE  
                        __accesstop 0080             __end_of__initialization 1DEE  
      lcd_send_command_8bit@command 003B                       ___rparam_used 000001  
            ??_gpio_pin_write_logic 0032                      __pcstackCOMRAM 002F  
                    ?_gpio_pin_init 0039         lcd_send_string_pos_4bit@lcd 0049  
                 Relay_TurnOn@F2878 0051         lcd_send_string_pos_4bit@ret 004F  
       lcd_send_string_pos_4bit@row 004E         lcd_send_string_pos_4bit@str 004B  
      lcd_send_data_pos_8bit@column 004C         lcd_send_string_pos_8bit@lcd 0049  
       lcd_send_string_pos_8bit@ret 004F         lcd_send_string_pos_8bit@row 004E  
       lcd_send_string_pos_8bit@str 004B          lcd_send_data_pos_4bit@data 004B  
                     _button_Values 1001                  _lcd_send_data_4bit 12CC  
                _lcd_send_data_8bit 188C          lcd_send_data_pos_8bit@data 004B  
gpio_pin_direction_init@_pin_config 002F                 ?_lcd_send_data_4bit 0039  
               ?_lcd_send_data_8bit 0039                   led_turn_off@F2889 0054  
         lcd_send_data_pos_4bit@lcd 0049           lcd_send_data_pos_4bit@ret 004E  
         lcd_send_data_pos_4bit@row 004D                ??_lcd_send_data_4bit 003C  
              ??_lcd_send_data_8bit 003C           lcd_send_data_pos_8bit@lcd 0049  
         lcd_send_data_pos_8bit@ret 004E           lcd_send_data_pos_8bit@row 004D  
                    _tris_registers 0015                             __Hparam 0000  
                           __Lparam 0000                     ??_gpio_pin_init 003B  
         ?_lcd_send_string_pos_4bit 0049           ?_lcd_send_string_pos_8bit 0049  
                      __psmallconst 1000                             __pcinit 1DC2  
                           __ramtop 1000                             __ptext0 17B4  
                           __ptext1 1CA6                             __ptext2 1BEA  
                           __ptext3 1CEE                             __ptext4 1C48  
                           __ptext5 1D36                             __ptext6 188C  
                           __ptext7 1A08                             __ptext8 1D7C  
                           __ptext9 12CC                     Relay_init@F2873 0052  
            lcd_send_data_4bit@data 003B                end_of_initialization 1DEE  
             __end_of_lcd_init_4bit 17B4               __end_of_lcd_init_8bit 168C  
     __end_of_lcd_send_command_4bit 1564       __end_of_lcd_send_command_8bit 1A08  
                     __Lmediumconst 0000              lcd_send_data_8bit@data 003B  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
           ?_lcd_send_data_pos_4bit 0049             ?_lcd_send_data_pos_8bit 0049  
                  gpio_pin_init@ret 003C                 _lcd_4bit_set_cursor 1AB2  
    __end_of_lcd_send_data_pos_4bit 1DC2      __end_of_lcd_send_data_pos_8bit 1D7C  
           _gpio_pin_direction_init 1018                       __pidataCOMRAM 1DF8  
      __end_of_lcd_send_string_4bit 1CA6        __end_of_lcd_send_string_8bit 1C48  
               start_initialization 1DC2                ?_lcd_4bit_set_cursor 0042  
                lcd_init_4bit@index 0046                  Relay_TurnOff@F2883 0050  
               _lcd_8bit_set_cursor 1A08                  lcd_init_8bit@index 0046  
                       __pbssCOMRAM 0050               ??_lcd_4bit_set_cursor 0046  
              ?_lcd_8bit_set_cursor 0042            gpio_pin_init@_pin_config 0039  
         ??_gpio_pin_direction_init 0031      lcd_send_string_pos_4bit@column 004D  
   gpio_pin_write_logic@_pin_config 002F           gpio_pin_write_logic@logic 0031  
                       __smallconst 1000               ??_lcd_8bit_set_cursor 0046  
              _lcd_send_string_4bit 1C48                _lcd_send_string_8bit 1BEA  
             __end_of_gpio_pin_init 1BEA      lcd_send_string_pos_8bit@column 004D  
   __end_of_gpio_pin_direction_init 117E           lcd_8bit_set_cursor@column 0045  
           gpio_pin_write_logic@ret 0038                           copy_data0 1DD6  
             ?_lcd_send_string_4bit 0042               ?_lcd_send_string_8bit 0042  
             _lcd_send_command_4bit 1418               _lcd_send_command_8bit 194A  
                          __Hrparam 0000            _lcd_send_string_pos_4bit 1CEE  
          _lcd_send_string_pos_8bit 1CA6                            __Lrparam 0000  
            lcd_4bit_set_cursor@lcd 0042              lcd_4bit_set_cursor@ret 0048  
            lcd_4bit_set_cursor@row 0044            lcd_send_command_4bit@lcd 0039  
          lcd_send_command_4bit@ret 0040            lcd_send_command_8bit@lcd 0039  
          lcd_send_command_8bit@ret 0040                            __ptext10 1AB2  
                          __ptext11 1564                            __ptext12 194A  
                          __ptext13 168C                            __ptext14 1418  
                          __ptext15 1B5C                            __ptext16 117E  
                          __ptext17 1018               __end_of_button_Values 1011  
                          isa$xinst 000000             lcd_send_data_4bit@index 0041  
                  lcd_init_4bit@lcd 0042                    lcd_init_4bit@ret 0047  
                  lcd_init_8bit@lcd 0042        __end_of_gpio_pin_write_logic 12CC  
                  lcd_init_8bit@ret 0047              ??_lcd_send_string_4bit 0046  
             led_toggle_state@F2894 0053              ??_lcd_send_string_8bit 0046  
            ?_lcd_send_command_4bit 0039                       _lcd_init_4bit 168C  
            ?_lcd_send_command_8bit 0039                       _lcd_init_8bit 1564  
           lcd_send_data_8bit@index 0041         __end_of_lcd_4bit_set_cursor 1B5C  
                    _port_registers 000B          gpio_pin_direction_init@ret 0037  
                    ?_lcd_init_4bit 0042                      ?_lcd_init_8bit 0042  
          ??_lcd_send_data_pos_4bit 004E            ??_lcd_send_data_pos_8bit 004E  
