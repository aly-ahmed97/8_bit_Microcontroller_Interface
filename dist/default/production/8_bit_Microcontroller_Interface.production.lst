

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 25 12:20:20 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4620 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     
    54                           	psect	idataCOMRAM
    55   00FEAE                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _lat_registers
    59   00FEAE  89                 	db	137
    60   00FEAF  0F                 	db	15
    61   00FEB0  8A                 	db	138
    62   00FEB1  0F                 	db	15
    63   00FEB2  8B                 	db	139
    64   00FEB3  0F                 	db	15
    65   00FEB4  8C                 	db	140
    66   00FEB5  0F                 	db	15
    67   00FEB6  8D                 	db	141
    68   00FEB7  0F                 	db	15
    69                           
    70                           ;initializer for _port_registers
    71   00FEB8  80                 	db	128
    72   00FEB9  0F                 	db	15
    73   00FEBA  81                 	db	129
    74   00FEBB  0F                 	db	15
    75   00FEBC  82                 	db	130
    76   00FEBD  0F                 	db	15
    77   00FEBE  83                 	db	131
    78   00FEBF  0F                 	db	15
    79   00FEC0  84                 	db	132
    80   00FEC1  0F                 	db	15
    81                           
    82                           ;initializer for _tris_registers
    83   00FEC2  92                 	db	146
    84   00FEC3  0F                 	db	15
    85   00FEC4  93                 	db	147
    86   00FEC5  0F                 	db	15
    87   00FEC6  94                 	db	148
    88   00FEC7  0F                 	db	15
    89   00FEC8  95                 	db	149
    90   00FEC9  0F                 	db	15
    91   00FECA  96                 	db	150
    92   00FECB  0F                 	db	15
    93   000000                     _LATA	set	3977
    94   000000                     _PORTE	set	3972
    95   000000                     _PORTD	set	3971
    96   000000                     _PORTC	set	3970
    97   000000                     _PORTB	set	3969
    98   000000                     _PORTA	set	3968
    99   000000                     _TRISA	set	3986
   100   000000                     _TRISE	set	3990
   101   000000                     _TRISD	set	3989
   102   000000                     _TRISC	set	3988
   103   000000                     _TRISB	set	3987
   104   000000                     _LATE	set	3981
   105   000000                     _LATD	set	3980
   106   000000                     _LATC	set	3979
   107   000000                     _LATB	set	3978
   108                           
   109                           ; #config settings
   110                           
   111                           	psect	cinit
   112   00FECC                     __pcinit:
   113                           	callstack 0
   114   00FECC                     start_initialization:
   115                           	callstack 0
   116   00FECC                     __initialization:
   117                           	callstack 0
   118                           
   119                           ; Initialize objects allocated to COMRAM (30 bytes)
   120                           ; load TBLPTR registers with __pidataCOMRAM
   121   00FECC  0EAE               	movlw	low __pidataCOMRAM
   122   00FECE  6EF6               	movwf	tblptrl,c
   123   00FED0  0EFE               	movlw	high __pidataCOMRAM
   124   00FED2  6EF7               	movwf	tblptrh,c
   125   00FED4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   126   00FED6  6EF8               	movwf	tblptru,c
   127   00FED8  EE00  F001         	lfsr	0,__pdataCOMRAM
   128   00FEDC  EE10 F01E          	lfsr	1,30
   129   00FEE0                     copy_data0:
   130   00FEE0  0009               	tblrd		*+
   131   00FEE2  CFF5 FFEE          	movff	tablat,postinc0
   132   00FEE6  50E5               	movf	postdec1,w,c
   133   00FEE8  50E1               	movf	fsr1l,w,c
   134   00FEEA  E1FA               	bnz	copy_data0
   135   00FEEC                     end_of_initialization:
   136                           	callstack 0
   137   00FEEC                     __end_of__initialization:
   138                           	callstack 0
   139   00FEEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   140   00FEEE  6EF8               	movwf	tblptru,c
   141   00FEF0  0100               	movlb	0
   142   00FEF2  EF7B  F07F         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	dataCOMRAM
   145   000001                     __pdataCOMRAM:
   146                           	callstack 0
   147   000001                     _lat_registers:
   148                           	callstack 0
   149   000001                     	ds	10
   150   00000B                     _port_registers:
   151                           	callstack 0
   152   00000B                     	ds	10
   153   000015                     _tris_registers:
   154                           	callstack 0
   155   000015                     	ds	10
   156                           
   157                           	psect	cstackCOMRAM
   158   00001F                     __pcstackCOMRAM:
   159                           	callstack 0
   160   00001F                     ??_gpio_port_toggle_logic:
   161   00001F                     gpio_port_direction_init@direction:
   162                           	callstack 0
   163   00001F                     gpio_port_write_logic@logic:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x0
   167   00001F                     	ds	1
   168   000020                     ??_gpio_port_direction_init:
   169   000020                     ??_gpio_port_write_logic:
   170                           
   171                           ; 1 bytes @ 0x1
   172   000020                     	ds	1
   173   000021                     gpio_port_toggle_logic@ret:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x2
   177   000021                     	ds	1
   178   000022                     gpio_port_direction_init@ret:
   179                           	callstack 0
   180   000022                     gpio_port_write_logic@ret:
   181                           	callstack 0
   182   000022                     gpio_port_toggle_logic@port:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x3
   186   000022                     	ds	1
   187   000023                     gpio_port_direction_init@port:
   188                           	callstack 0
   189   000023                     gpio_port_write_logic@port:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x4
   193   000023                     	ds	1
   194   000024                     ??_main:
   195                           
   196                           ; 1 bytes @ 0x5
   197   000024                     	ds	2
   198                           
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 10 in file "Application.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;  ret             1    0        unsigned char 
   209 ;; Return value:  Size  Location     Type
   210 ;;                  2  145[None  ] int 
   211 ;; Registers used:
   212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   222 ;;Total ram usage:        2 bytes
   223 ;; Hardware stack levels required when called: 1
   224 ;; This function calls:
   225 ;;		_gpio_port_direction_init
   226 ;;		_gpio_port_toggle_logic
   227 ;;		_gpio_port_write_logic
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text0
   234   00FEF6                     __ptext0:
   235                           	callstack 0
   236   00FEF6                     _main:
   237                           	callstack 30
   238   00FEF6  0E00               	movlw	0
   239   00FEF8  6E1F               	movwf	gpio_port_direction_init@direction^0,c
   240   00FEFA  0E02               	movlw	2
   241   00FEFC  EC97  F07F         	call	_gpio_port_direction_init
   242   00FF00  0E55               	movlw	85
   243   00FF02  6E1F               	movwf	gpio_port_write_logic@logic^0,c
   244   00FF04  0E02               	movlw	2
   245   00FF06  ECDD  F07F         	call	_gpio_port_write_logic
   246   00FF0A                     l1049:
   247   00FF0A  0E02               	movlw	2
   248   00FF0C  ECBA  F07F         	call	_gpio_port_toggle_logic
   249   00FF10                     
   250                           ;Application.c: 17:         _delay((unsigned long)((500)*(4000000UL/4000.0)));
   251   00FF10  0E03               	movlw	3
   252   00FF12  6E25               	movwf	(??_main+1)^0,c
   253   00FF14  0E8A               	movlw	138
   254   00FF16  6E24               	movwf	??_main^0,c
   255   00FF18  0E56               	movlw	86
   256   00FF1A                     u397:
   257   00FF1A  2EE8               	decfsz	wreg,f,c
   258   00FF1C  D7FE               	bra	u397
   259   00FF1E  2E24               	decfsz	??_main^0,f,c
   260   00FF20  D7FC               	bra	u397
   261   00FF22  2E25               	decfsz	(??_main+1)^0,f,c
   262   00FF24  D7FA               	bra	u397
   263   00FF26  EF85  F07F         	goto	l1049
   264   00FF2A  EF00  F000         	goto	start
   265   00FF2E                     __end_of_main:
   266                           	callstack 0
   267                           
   268 ;; *************** function _gpio_port_write_logic *****************
   269 ;; Defined at:
   270 ;;		line 243 in file "MCAL_LAYER/GPIO/HAL_GPIO.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;  port            1    wreg     enum E2816
   273 ;;  logic           1    0[COMRAM] unsigned char 
   274 ;; Auto vars:     Size  Location     Type
   275 ;;  port            1    4[COMRAM] enum E2816
   276 ;;  ret             1    3[COMRAM] unsigned char 
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      unsigned char 
   279 ;; Registers used:
   280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   281 ;; Tracked objects:
   282 ;;		On entry : 0/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   286 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;Total ram usage:        5 bytes
   291 ;; Hardware stack levels used: 1
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		_main
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text1
   300   00FFBA                     __ptext1:
   301                           	callstack 0
   302   00FFBA                     _gpio_port_write_logic:
   303                           	callstack 30
   304                           
   305                           ;incstack = 0
   306                           ;gpio_port_write_logic@port stored from wreg
   307   00FFBA  6E23               	movwf	gpio_port_write_logic@port^0,c
   308   00FFBC                     
   309                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 244:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   310   00FFBC  0E01               	movlw	1
   311   00FFBE  6E22               	movwf	gpio_port_write_logic@ret^0,c
   312   00FFC0                     
   313                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 245:     if(port > 0x05 -1)
   314   00FFC0  0E04               	movlw	4
   315   00FFC2  6423               	cpfsgt	gpio_port_write_logic@port^0,c
   316   00FFC4  EFE6  F07F         	goto	u381
   317   00FFC8  EFE8  F07F         	goto	u380
   318   00FFCC                     u381:
   319   00FFCC  EFEC  F07F         	goto	l1037
   320   00FFD0                     u380:
   321   00FFD0                     
   322                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 246:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 247:         ret = (
      +                          Std_ReturnType)0x00 ;
   323   00FFD0  0E00               	movlw	0
   324   00FFD2  6E22               	movwf	gpio_port_write_logic@ret^0,c
   325                           
   326                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 248:     }
   327   00FFD4  EFFE  F07F         	goto	l1039
   328   00FFD8                     l1037:
   329                           
   330                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 250:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 251:         *lat_re
      +                          gisters[port] = logic;
   331   00FFD8  5023               	movf	gpio_port_write_logic@port^0,w,c
   332   00FFDA  0D02               	mullw	2
   333   00FFDC  0E01               	movlw	low _lat_registers
   334   00FFDE  24F3               	addwf	243,w,c
   335   00FFE0  6ED9               	movwf	fsr2l,c
   336   00FFE2  0E00               	movlw	high _lat_registers
   337   00FFE4  20F4               	addwfc	prodh,w,c
   338   00FFE6  6EDA               	movwf	fsr2h,c
   339   00FFE8  CFDE F020          	movff	postinc2,??_gpio_port_write_logic
   340   00FFEC  CFDD F021          	movff	postdec2,??_gpio_port_write_logic+1
   341   00FFF0  C020  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   342   00FFF4  C021  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   343   00FFF8  C01F  FFDF         	movff	gpio_port_write_logic@logic,indf2
   344   00FFFC                     l1039:
   345                           
   346                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 253:     return ret ;
   347   00FFFC  5022               	movf	gpio_port_write_logic@ret^0,w,c
   348   00FFFE  0012               	return		;funcret
   349   010000                     __end_of_gpio_port_write_logic:
   350                           	callstack 0
   351                           
   352 ;; *************** function _gpio_port_toggle_logic *****************
   353 ;; Defined at:
   354 ;;		line 286 in file "MCAL_LAYER/GPIO/HAL_GPIO.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;  port            1    wreg     enum E2816
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  port            1    3[COMRAM] enum E2816
   359 ;;  ret             1    2[COMRAM] unsigned char 
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      unsigned char 
   362 ;; Registers used:
   363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;Total ram usage:        4 bytes
   374 ;; Hardware stack levels used: 1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text2
   383   00FF74                     __ptext2:
   384                           	callstack 0
   385   00FF74                     _gpio_port_toggle_logic:
   386                           	callstack 30
   387                           
   388                           ;incstack = 0
   389                           ;gpio_port_toggle_logic@port stored from wreg
   390   00FF74  6E22               	movwf	gpio_port_toggle_logic@port^0,c
   391   00FF76                     
   392                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 287:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   393   00FF76  0E01               	movlw	1
   394   00FF78  6E21               	movwf	gpio_port_toggle_logic@ret^0,c
   395   00FF7A                     
   396                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 288:     if(port > 0x05 -1)
   397   00FF7A  0E04               	movlw	4
   398   00FF7C  6422               	cpfsgt	gpio_port_toggle_logic@port^0,c
   399   00FF7E  EFC3  F07F         	goto	u151
   400   00FF82  EFC5  F07F         	goto	u150
   401   00FF86                     u151:
   402   00FF86  EFC9  F07F         	goto	l911
   403   00FF8A                     u150:
   404   00FF8A                     
   405                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 289:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 290:         ret = (
      +                          Std_ReturnType)0x00 ;
   406   00FF8A  0E00               	movlw	0
   407   00FF8C  6E21               	movwf	gpio_port_toggle_logic@ret^0,c
   408                           
   409                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 291:     }
   410   00FF8E  EFDB  F07F         	goto	l913
   411   00FF92                     l911:
   412                           
   413                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 293:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 294:         *lat_re
      +                          gisters[port] ^= 0xFF ;
   414   00FF92  5022               	movf	gpio_port_toggle_logic@port^0,w,c
   415   00FF94  0D02               	mullw	2
   416   00FF96  0E01               	movlw	low _lat_registers
   417   00FF98  24F3               	addwf	243,w,c
   418   00FF9A  6ED9               	movwf	fsr2l,c
   419   00FF9C  0E00               	movlw	high _lat_registers
   420   00FF9E  20F4               	addwfc	prodh,w,c
   421   00FFA0  6EDA               	movwf	fsr2h,c
   422   00FFA2  CFDE F01F          	movff	postinc2,??_gpio_port_toggle_logic
   423   00FFA6  CFDD F020          	movff	postdec2,??_gpio_port_toggle_logic+1
   424   00FFAA  C01F  FFD9         	movff	??_gpio_port_toggle_logic,fsr2l
   425   00FFAE  C020  FFDA         	movff	??_gpio_port_toggle_logic+1,fsr2h
   426   00FFB2  0EFF               	movlw	255
   427   00FFB4  1ADF               	xorwf	indf2,f,c
   428   00FFB6                     l913:
   429                           
   430                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 296:     return ret ;
   431   00FFB6  5021               	movf	gpio_port_toggle_logic@ret^0,w,c
   432   00FFB8  0012               	return		;funcret
   433   00FFBA                     __end_of_gpio_port_toggle_logic:
   434                           	callstack 0
   435                           
   436 ;; *************** function _gpio_port_direction_init *****************
   437 ;; Defined at:
   438 ;;		line 199 in file "MCAL_LAYER/GPIO/HAL_GPIO.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  port            1    wreg     enum E2816
   441 ;;  direction       1    0[COMRAM] unsigned char 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  port            1    4[COMRAM] enum E2816
   444 ;;  ret             1    3[COMRAM] unsigned char 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      unsigned char 
   447 ;; Registers used:
   448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   454 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;Total ram usage:        5 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text3
   468   00FF2E                     __ptext3:
   469                           	callstack 0
   470   00FF2E                     _gpio_port_direction_init:
   471                           	callstack 30
   472                           
   473                           ;incstack = 0
   474                           ;gpio_port_direction_init@port stored from wreg
   475   00FF2E  6E23               	movwf	gpio_port_direction_init@port^0,c
   476   00FF30                     
   477                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 200:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   478   00FF30  0E01               	movlw	1
   479   00FF32  6E22               	movwf	gpio_port_direction_init@ret^0,c
   480   00FF34                     
   481                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 201:     if(port > 0x05 -1)
   482   00FF34  0E04               	movlw	4
   483   00FF36  6423               	cpfsgt	gpio_port_direction_init@port^0,c
   484   00FF38  EFA0  F07F         	goto	u371
   485   00FF3C  EFA2  F07F         	goto	u370
   486   00FF40                     u371:
   487   00FF40  EFA6  F07F         	goto	l1025
   488   00FF44                     u370:
   489   00FF44                     
   490                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 202:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 203:         ret = (
      +                          Std_ReturnType)0x00 ;
   491   00FF44  0E00               	movlw	0
   492   00FF46  6E22               	movwf	gpio_port_direction_init@ret^0,c
   493                           
   494                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 204:     }
   495   00FF48  EFB8  F07F         	goto	l1027
   496   00FF4C                     l1025:
   497                           
   498                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 206:     {;MCAL_LAYER/GPIO/HAL_GPIO.c: 207:         *tris_r
      +                          egisters[port] = direction ;
   499   00FF4C  5023               	movf	gpio_port_direction_init@port^0,w,c
   500   00FF4E  0D02               	mullw	2
   501   00FF50  0E15               	movlw	low _tris_registers
   502   00FF52  24F3               	addwf	243,w,c
   503   00FF54  6ED9               	movwf	fsr2l,c
   504   00FF56  0E00               	movlw	high _tris_registers
   505   00FF58  20F4               	addwfc	prodh,w,c
   506   00FF5A  6EDA               	movwf	fsr2h,c
   507   00FF5C  CFDE F020          	movff	postinc2,??_gpio_port_direction_init
   508   00FF60  CFDD F021          	movff	postdec2,??_gpio_port_direction_init+1
   509   00FF64  C020  FFD9         	movff	??_gpio_port_direction_init,fsr2l
   510   00FF68  C021  FFDA         	movff	??_gpio_port_direction_init+1,fsr2h
   511   00FF6C  C01F  FFDF         	movff	gpio_port_direction_init@direction,indf2
   512   00FF70                     l1027:
   513                           
   514                           ;MCAL_LAYER/GPIO/HAL_GPIO.c: 209:     return ret ;
   515   00FF70  5022               	movf	gpio_port_direction_init@ret^0,w,c
   516   00FF72  0012               	return		;funcret
   517   00FF74                     __end_of_gpio_port_direction_init:
   518                           	callstack 0
   519   000000                     
   520                           	psect	rparam
   521   000000                     
   522                           	psect	idloc
   523                           
   524                           ;Config register IDLOC0 @ 0x200000
   525                           ;	unspecified, using default values
   526   200000                     	org	2097152
   527   200000  FF                 	db	255
   528                           
   529                           ;Config register IDLOC1 @ 0x200001
   530                           ;	unspecified, using default values
   531   200001                     	org	2097153
   532   200001  FF                 	db	255
   533                           
   534                           ;Config register IDLOC2 @ 0x200002
   535                           ;	unspecified, using default values
   536   200002                     	org	2097154
   537   200002  FF                 	db	255
   538                           
   539                           ;Config register IDLOC3 @ 0x200003
   540                           ;	unspecified, using default values
   541   200003                     	org	2097155
   542   200003  FF                 	db	255
   543                           
   544                           ;Config register IDLOC4 @ 0x200004
   545                           ;	unspecified, using default values
   546   200004                     	org	2097156
   547   200004  FF                 	db	255
   548                           
   549                           ;Config register IDLOC5 @ 0x200005
   550                           ;	unspecified, using default values
   551   200005                     	org	2097157
   552   200005  FF                 	db	255
   553                           
   554                           ;Config register IDLOC6 @ 0x200006
   555                           ;	unspecified, using default values
   556   200006                     	org	2097158
   557   200006  FF                 	db	255
   558                           
   559                           ;Config register IDLOC7 @ 0x200007
   560                           ;	unspecified, using default values
   561   200007                     	org	2097159
   562   200007  FF                 	db	255
   563                           
   564                           	psect	config
   565                           
   566                           ; Padding undefined space
   567   300000                     	org	3145728
   568   300000  FF                 	db	255
   569                           
   570                           ;Config register CONFIG1H @ 0x300001
   571                           ;	Oscillator Selection bits
   572                           ;	OSC = HS, HS oscillator
   573                           ;	Fail-Safe Clock Monitor Enable bit
   574                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   575                           ;	Internal/External Oscillator Switchover bit
   576                           ;	IESO = OFF, Oscillator Switchover mode disabled
   577   300001                     	org	3145729
   578   300001  02                 	db	2
   579                           
   580                           ;Config register CONFIG2L @ 0x300002
   581                           ;	Power-up Timer Enable bit
   582                           ;	PWRT = OFF, PWRT disabled
   583                           ;	Brown-out Reset Enable bits
   584                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   585                           ;	Brown Out Reset Voltage bits
   586                           ;	BORV = 1, 
   587   300002                     	org	3145730
   588   300002  09                 	db	9
   589                           
   590                           ;Config register CONFIG2H @ 0x300003
   591                           ;	Watchdog Timer Enable bit
   592                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   593                           ;	Watchdog Timer Postscale Select bits
   594                           ;	WDTPS = 32768, 1:32768
   595   300003                     	org	3145731
   596   300003  1E                 	db	30
   597                           
   598                           ; Padding undefined space
   599   300004                     	org	3145732
   600   300004  FF                 	db	255
   601                           
   602                           ;Config register CONFIG3H @ 0x300005
   603                           ;	CCP2 MUX bit
   604                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   605                           ;	PORTB A/D Enable bit
   606                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   607                           ;	Low-Power Timer1 Oscillator Enable bit
   608                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   609                           ;	MCLR Pin Enable bit
   610                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   611   300005                     	org	3145733
   612   300005  81                 	db	129
   613                           
   614                           ;Config register CONFIG4L @ 0x300006
   615                           ;	Stack Full/Underflow Reset Enable bit
   616                           ;	STVREN = ON, Stack full/underflow will cause Reset
   617                           ;	Single-Supply ICSP Enable bit
   618                           ;	LVP = OFF, Single-Supply ICSP disabled
   619                           ;	Extended Instruction Set Enable bit
   620                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   621                           ;	Background Debugger Enable bit
   622                           ;	DEBUG = 0x1, unprogrammed default
   623   300006                     	org	3145734
   624   300006  81                 	db	129
   625                           
   626                           ; Padding undefined space
   627   300007                     	org	3145735
   628   300007  FF                 	db	255
   629                           
   630                           ;Config register CONFIG5L @ 0x300008
   631                           ;	Code Protection bit
   632                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   633                           ;	Code Protection bit
   634                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   635                           ;	Code Protection bit
   636                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   637                           ;	Code Protection bit
   638                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   639   300008                     	org	3145736
   640   300008  0F                 	db	15
   641                           
   642                           ;Config register CONFIG5H @ 0x300009
   643                           ;	Boot Block Code Protection bit
   644                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   645                           ;	Data EEPROM Code Protection bit
   646                           ;	CPD = OFF, Data EEPROM not code-protected
   647   300009                     	org	3145737
   648   300009  C0                 	db	192
   649                           
   650                           ;Config register CONFIG6L @ 0x30000A
   651                           ;	Write Protection bit
   652                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   653                           ;	Write Protection bit
   654                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   655                           ;	Write Protection bit
   656                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   657                           ;	Write Protection bit
   658                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   659   30000A                     	org	3145738
   660   30000A  0F                 	db	15
   661                           
   662                           ;Config register CONFIG6H @ 0x30000B
   663                           ;	Configuration Register Write Protection bit
   664                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   665                           ;	Boot Block Write Protection bit
   666                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   667                           ;	Data EEPROM Write Protection bit
   668                           ;	WRTD = OFF, Data EEPROM not write-protected
   669   30000B                     	org	3145739
   670   30000B  E0                 	db	224
   671                           
   672                           ;Config register CONFIG7L @ 0x30000C
   673                           ;	Table Read Protection bit
   674                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   675                           ;	Table Read Protection bit
   676                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   677                           ;	Table Read Protection bit
   678                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   679                           ;	Table Read Protection bit
   680                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   681   30000C                     	org	3145740
   682   30000C  0F                 	db	15
   683                           
   684                           ;Config register CONFIG7H @ 0x30000D
   685                           ;	Boot Block Table Read Protection bit
   686                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   687   30000D                     	org	3145741
   688   30000D  40                 	db	64
   689                           tosu	equ	0xFFF
   690                           tosh	equ	0xFFE
   691                           tosl	equ	0xFFD
   692                           stkptr	equ	0xFFC
   693                           pclatu	equ	0xFFB
   694                           pclath	equ	0xFFA
   695                           pcl	equ	0xFF9
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           prodh	equ	0xFF4
   701                           prodl	equ	0xFF3
   702                           indf0	equ	0xFEF
   703                           postinc0	equ	0xFEE
   704                           postdec0	equ	0xFED
   705                           preinc0	equ	0xFEC
   706                           plusw0	equ	0xFEB
   707                           fsr0h	equ	0xFEA
   708                           fsr0l	equ	0xFE9
   709                           wreg	equ	0xFE8
   710                           indf1	equ	0xFE7
   711                           postinc1	equ	0xFE6
   712                           postdec1	equ	0xFE5
   713                           preinc1	equ	0xFE4
   714                           plusw1	equ	0xFE3
   715                           fsr1h	equ	0xFE2
   716                           fsr1l	equ	0xFE1
   717                           bsr	equ	0xFE0
   718                           indf2	equ	0xFDF
   719                           postinc2	equ	0xFDE
   720                           postdec2	equ	0xFDD
   721                           preinc2	equ	0xFDC
   722                           plusw2	equ	0xFDB
   723                           fsr2h	equ	0xFDA
   724                           fsr2l	equ	0xFD9
   725                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7      37
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_port_direction_init
    _main->_gpio_port_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     381
                                              5 COMRAM     2     2      0
           _gpio_port_direction_init
             _gpio_port_toggle_logic
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     166
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _gpio_port_toggle_logic                               4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _gpio_port_direction_init                             5     4      1     166
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_port_direction_init
   _gpio_port_toggle_logic
   _gpio_port_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      7      25       1       29.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      39        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 25 12:20:20 2023

                              l121 FFFE                                l109 FF72  
                              l133 FFB8                                l911 FF92  
                              l913 FFB6                                l905 FF76  
                              l907 FF7A                                l909 FF8A  
                              u150 FF8A                                u151 FF86  
                              u370 FF44                                u371 FF40  
                              u380 FFD0                                u381 FFCC  
                              u397 FF1A                                prod 000FF3  
                              wreg 000FE8                               l1021 FF34  
                             l1023 FF44                               l1031 FFBC  
                             l1025 FF4C                               l1033 FFC0  
                             l1027 FF70                               l1019 FF30  
                             l1035 FFD0                               l1051 FF10  
                             l1043 FEF6                               l1037 FFD8  
                             l1045 FEF6                               l1039 FFFC  
                             l1047 FF00                               l1049 FF0A  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               _main FEF6  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             prodl 000FF3                               start 0000  
                     ___param_bank 000000              _gpio_port_write_logic FFBA  
                            ?_main 001F                              _PORTA 000F80  
                            _PORTB 000F81                              _PORTC 000F82  
                            _PORTD 000F83                              _PORTE 000F84  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                              tablat 000FF5  
gpio_port_direction_init@direction 001F                    __initialization FECC  
                     __end_of_main FF2E          ?_gpio_port_direction_init 001F  
                    _lat_registers 0001                             ??_main 0024  
                    __activetblptr 000002          gpio_port_write_logic@port 0023  
          ?_gpio_port_toggle_logic 001F             ?_gpio_port_write_logic 001F  
                           isa$std 000001                       __pdataCOMRAM 0001  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                         __accesstop 0080  
          __end_of__initialization FEEC     __end_of_gpio_port_toggle_logic FFBA  
                    ___rparam_used 000001                     __pcstackCOMRAM 001F  
       gpio_port_toggle_logic@port 0022           gpio_port_write_logic@ret 0022  
                   _tris_registers 0015                            __Hparam 0000  
                          __Lparam 0000                            __pcinit FECC  
                          __ramtop 1000                            __ptext0 FEF6  
                          __ptext1 FFBA                            __ptext2 FF74  
                          __ptext3 FF2E               end_of_initialization FEEC  
                    __Lmediumconst 0000            ??_gpio_port_write_logic 0020  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
     gpio_port_direction_init@port 0023           _gpio_port_direction_init FF2E  
                    __pidataCOMRAM FEAE                start_initialization FECC  
         ??_gpio_port_toggle_logic 001F      __end_of_gpio_port_write_logic 0000  
       ??_gpio_port_direction_init 0020                          copy_data0 FEE0  
                         __Hrparam 0000                           __Lrparam 0000  
        gpio_port_toggle_logic@ret 0021                           isa$xinst 000000  
           _gpio_port_toggle_logic FF74                     _port_registers 000B  
      gpio_port_direction_init@ret 0022   __end_of_gpio_port_direction_init FF74  
       gpio_port_write_logic@logic 001F  
